@use 'sass:map';
@use 'variables' as *;

// ===================================
// BASE STYLES
// ===================================
// Generic Reset + Typography

// ===================================
// Generic Reset
// ===================================

*,
*::before,
*::after {
  box-sizing: border-box;
}

html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video {
  margin: 0;
  padding: 0;
  border: 0;
  font: inherit;
  font-size: 100%;
  vertical-align: baseline;
}

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
  display: block;
}

blockquote,
q {
  quotes: none;

  &:before,
  &:after {
    content: none;
  }
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

// ===================================
// Root elements
// ===================================

:root {
  font-family: Inter, sans-serif;
  font-feature-settings: 'liga' 1, 'calt' 1;
}

@supports (font-variation-settings: normal) {
  :root {
    font-family: InterVariable, sans-serif;
  }
}

html {
  font-size: 100%;
  height: 100%;
  scroll-behavior: smooth;
  -webkit-text-size-adjust: 100%;
  overflow: hidden;
  overscroll-behavior-x: none;
}

body {
  height: 100%;
  width: 100%;
  margin: 0;
  padding: 0;
  overflow-y: scroll;
  overflow-x: hidden;
  font-size: $font-base;
  font-weight: 400;
  line-height: $line-height-base;
  letter-spacing: $letter-spacing-base;
  font-feature-settings: 'ss01' 1, 'ss03' 1, 'cv10' 1, 'cv05' 1, 'cv06' 1,
    'cv11' 1;
  font-optical-sizing: auto;
  color: map.get($colors, text);
  background: map.get($colors, bg);
  scrollbar-width: auto;
  scrollbar-color: map.get($colors, text-subtle) transparent;

  *:focus-visible {
    outline: $border-width solid map.get($colors, text);
    outline-offset: calc($border-width * 2);
  }

  &::-webkit-scrollbar {
    width: $unit;
  }

  &::-webkit-scrollbar-track {
    background: transparent;
  }

  &::-webkit-scrollbar-thumb {
    background: map.get($colors, text-subtle);
  }
}

// ===================================
// Typography
// ===================================

h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0 0 map.get($spacing, sm);
  font-weight: 600;
  font-size: $font-large;
  letter-spacing: $letter-spacing-large;
  line-height: $line-height-base;
  color: map.get($colors, text);
  text-rendering: optimizeLegibility;
}

h1 {
  font-size: $font-xl;
  font-weight: 500;
  letter-spacing: $letter-spacing-xl;
  line-height: $line-height-tight;


  a {
    text-decoration: none;
    color: map.get($colors, links);
  }
}

h2 {
  padding-top: map.get($spacing, md);

  &:first-of-type {
    padding-top: map.get($spacing, xs);
  }
}

h3 {
  font-size: $font-base;
  line-height: $line-height-base;
}

p {
  margin: 0 0 map.get($spacing, md) 0;
  color: map.get($colors, text-subtle);
  text-rendering: optimizeSpeed;

  &:last-child {
    margin-bottom: 0;
  }
}

a {
  width: fit-content;
  color: currentColor;
  text-decoration: calc($unit/($perfect-fourth * 2)) underline;
  text-underline-offset: map.get($spacing, xs);
  transition: all $transition-speed ease-in-out;

  &:hover,
  &:focus-visible,
  &.active:hover,
  &.active:focus-visible {
    color: map.get($colors, links);
    text-decoration-color: map.get($colors, links);
  }

  &:focus {
    outline: auto;
  }

  h2 {
    color: inherit;
  }

  &[href^='tel'] {
    color: inherit;
    text-decoration: none;
  }

  &[href^='http'], &[href^='mailto'] {
    display: inline-block;
    max-width: 100%;
    padding-right: 5px;
    justify-content: center;
    border: $border-width solid transparent;
    cursor: pointer;

    &:not(.unpadded) {
      margin-top: map.get($spacing, sm);
    }

    +p {
      margin-top: map.get($spacing, sm);
    }

    &::after {
      content: '\00a0 â†—';
      display: inline-block;
      inset: calc(map.get($spacing, xs) / $perfect-fourth) map.get($spacing, xs) auto auto;
      width: $ext-icon-size;
      height: $ext-icon-size;
      text-decoration: none;
    }
  }
}

i {
  font-style: italic;
  font-weight: inherit;
}

b {
  font-weight: 600;
}

ul,
ol {
  margin: 0 0 0 map.get($spacing, md);
  padding: 0;
  color: map.get($colors, text-subtle);

  li:last-child {
    margin-bottom: map.get($spacing, sm);
  }
}

ol {
  list-style: decimal;
  padding-left: map.get($spacing, xs);

  li {
    display: list-item;
    padding-bottom: map.get($spacing, sm);
  }
}

li {
  display: inline-block;
  margin: 0;
}
