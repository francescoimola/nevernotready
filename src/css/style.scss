@use 'sass:map';

// ===================================
// Variables, Maps and Mixins
// ===================================

// Magic numbers as variables
$golden-ratio: 1.618;
$perfect-fourth: 1.333;
$opacity-fix: 0.99; // Prevents rendering issues
$icon-scale: 4.5;
$logo-scale: 3;

// Typography
$font-base: 'Inter Variable', -apple-system, BlinkMacSystemFont, 'Segoe UI',
  Roboto, sans-serif;

$scale-ratio: 1.414; // Type scale ratio

$font-base: clamp(1rem, 1.3vw, 1.2rem);
$font-large: calc($font-base * $scale-ratio);
$font-xl: calc($font-large * $scale-ratio);

$line-height-base: 1.5;
$line-height-tight: 1.2;

$letter-spacing-base: -0.015em;
$letter-spacing-large: -0.025em;
$letter-spacing-xl: -0.035em;

// Spacing
$unit: 0.25rem;
$spacing: (
  xs: $unit,
  sm: $unit * 2,
  md: $unit * 4,
  lg: $unit * 6,
  xl: $unit * 10,
  2xl: $unit * 16,
);

// Colors
$colors: (
  bg: #f9f3f3,
  text: hsl(129, 52%, 5%),
  text-subtle: color-mix(in srgb, #061308 80%, #f9f3f3),
  text-faint: color-mix(in srgb, #061308 65%, #f9f3f3),
  links: #00610f,
  links-subtle: #86cb90,
  red: #ff6149,
  bg-translucent: color-mix(in srgb, #f9f3f3 97%, #061308),
  bg-more-translucent: color-mix(in srgb, #f6f6f6 87%, #061308),
  border: color-mix(in srgb, #f9f3f3 75%, #061308),
);

// Layout
$container-width: 60ch;
$border-width: $golden-ratio * 1px;
$ext-icon-size: map.get($spacing, sm) + map.get($spacing, xs);
$transition-speed: 150ms;

// Breakpoints
$breakpoints: (
  md: 820px,
  sm: 480px,
);

@mixin flex($dir: column, $gap: null) {
  display: flex;
  flex-direction: $dir;

  @if $gap {
    gap: $gap;
  }
}

// ===================================
// Generic Reset
// ===================================

*,
*::before,
*::after {
  box-sizing: border-box;
}

html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video {
  margin: 0;
  padding: 0;
  border: 0;
  font: inherit;
  font-size: 100%;
  vertical-align: baseline;
}

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
  display: block;
}

blockquote,
q {
  quotes: none;

  &:before,
  &:after {
    content: none;
  }
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

// ===================================
// Root elements
// ===================================

:root {
  font-family: Inter, sans-serif;
  font-feature-settings: 'liga' 1, 'calt' 1;
}

@supports (font-variation-settings: normal) {
  :root {
    font-family: InterVariable, sans-serif;
  }
}

html {
  font-size: 100%;
  height: 100%;
  scroll-behavior: smooth;
  -webkit-text-size-adjust: 100%;
  overflow: auto;
}

body {
  height: 100%;
  width: 100%;
  margin: 0;
  padding: 0;
  overflow-y: scroll;
  overflow-x: hidden;
  font-size: $font-base;
  font-weight: 400;
  line-height: $line-height-base;
  letter-spacing: $letter-spacing-base;
  font-feature-settings: 'ss01' 1, 'ss03' 1, 'cv10' 1, 'cv05' 1, 'cv06' 1,
    'cv11' 1;
  font-optical-sizing: auto;
  color: map.get($colors, text);
  background: map.get($colors, bg);

  *:focus-visible {
    outline: $border-width solid map.get($colors, text);
    outline-offset: calc($border-width * 2);
  }
}

// ===================================
// Typography
// ===================================

h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0 0 map.get($spacing, sm);
  font-weight: 600;
  font-size: $font-large;
  letter-spacing: $letter-spacing-large;
  line-height: $line-height-base;
  color: map.get($colors, text);
  text-rendering: optimizeLegibility;
  text-wrap: balance;
}

h1 {
  font-size: $font-xl;
  font-weight: 500;
  letter-spacing: $letter-spacing-xl;
  line-height: $line-height-tight;


  a {
    text-decoration: none;
    color: map.get($colors, links);
  }
}

h2 {
  padding-top: map.get($spacing, md);

  &:first-of-type {
    padding-top: map.get($spacing, xs);
  }
}

h3 {
  font-size: $font-base;
  line-height: $line-height-base;
}

p {
  margin: 0 0 map.get($spacing, md) 0;
  color: map.get($colors, text-subtle);
  text-rendering: optimizeSpeed;
  text-wrap: pretty;

  &:last-child {
    margin-bottom: 0;
  }
}

a {
  width: fit-content;
  color: currentColor;
  text-decoration: calc($unit/($perfect-fourth * 2)) underline;
  text-underline-offset: map.get($spacing, xs);
  transition: all $transition-speed ease-in-out;

  &:hover,
  &:focus-visible,
  &.active:hover,
  &.active:focus-visible {
    color: map.get($colors, links);
    text-decoration-color: map.get($colors, links);
  }

  &:focus {
    outline: auto;
  }

  h2 {
    color: inherit;
  }

  &[href^='tel'] {
    color: inherit;
    text-decoration: none;
  }

  &[href^='http'] {
    display: inline-block;
    width: max-content;
    padding-right: 5px;
    justify-content: center;
    border: $border-width solid transparent;
    cursor: pointer;

    &:not(.unpadded) {
      margin-top: map.get($spacing, sm);
    }

    +p {
      margin-top: map.get($spacing, sm);
    }

    &::after {
      content: '\00a0 â†—';
      display: inline-block;
      inset: calc(map.get($spacing, xs) / $perfect-fourth) map.get($spacing, xs) auto auto;
      width: $ext-icon-size;
      height: $ext-icon-size;
      text-decoration: none;
    }
  }
}

i {
  font-style: italic;
  font-weight: inherit;
}

b {
  font-weight: 600;
}

ul,
ol {
  margin: 0 0 0 map.get($spacing, md);
  padding: 0;
  color: map.get($colors, text-subtle);

  li:last-child {
    margin-bottom: map.get($spacing, sm);
  }
}

ol {
  list-style: decimal;

  li {
    display: list-item;
    padding-bottom: map.get($spacing, sm);
  }
}

li {
  display: inline-block;
  margin: 0;
}

// ===================================
// Media
// ===================================

svg,
img {
  display: block;
  max-width: 100%;
  height: auto;
  fill: map.get($colors, text);
  image-rendering: crisp-edges;
  opacity: $opacity-fix;

  &.give-border {
    border: $border-width solid map.get($colors, border);
    border-radius: map.get($spacing, xs);
  }
}

img.hero {
  min-width: calc(map.get($spacing, 2xl) * $icon-scale);
  max-width: 25vw;
  margin: 0 auto;
  object-fit: contain;
}

figure {
  @include flex(column, map.get($spacing, xs));
  width: 100%;

  figcaption {
    margin-top: map.get($spacing, sm);
  }
}

details>summary {
  gap: map.get($spacing, lg);

  h2 {
    display: inline;
  }
}

.ascii-art {
	font-family: monospace;
	color: currentColor;
	white-space: pre;
	overflow-x: auto;
  padding-block: map.get($spacing, lg);

	@media (max-width: map.get($breakpoints, sm)) {
		font-size: calc($font-base * 0.75);
	}
}

// ===================================
// LAYOUT
// ===================================

main,
section {
  @include flex;
  width: 100%;
  justify-content: flex-start;
  align-content: start;
  flex-wrap: nowrap;
}

.split-screen {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  width: 100%;
  gap: map.get($spacing, md);
  padding-inline: clamp(0.5rem, 3vw, 4rem);
  box-sizing: border-box;
  align-items: flex-start;

  header {
    position: sticky;
    top: 0;
    left: 0;
    align-self: start;

    h1 {
      max-width: $container-width / 2;
    }

    &.space-between {
      display: flex;
      flex-direction: column;
      justify-content: space-between;
      align-items: flex-start;
      width: 100%;
      height: calc(100vh - #{map.get($spacing, xl) * 2});
    }
  }

  .space-between {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: flex-start;
    width: 100%;
    height: 100%;

    &.add-gap {
      gap: map.get($spacing, md);
    }

    &:not(header):last-of-type {
      padding-bottom: map.get($spacing, xl);
    }
  }

  a.space-between {
    text-decoration: none;
    padding: map.get($spacing, md);
    background: map.get($colors, bg);
    border: $border-width solid map.get($colors, border);
    border-radius: map.get($spacing, xs);
    transition: all $transition-speed ease-in-out;

    * {
      transition: all $transition-speed ease-in-out;
    }

    &:hover,
    &:focus-visible {
      background: map.get($colors, links);

      &,
      * {
        color: map.get($colors, bg);
      }
    }

    >p {
      width: 100%;
      border-top: $border-width dotted map.get($colors, border);
      color: map.get($colors, text-subtle);
      padding-top: map.get($spacing, xs);
    }
  }

  b {
    font-weight: 600;
  }
}

.wayfinding-wrapper {
  gap: map.get($spacing, sm);

  a {
    @extend b;
  }
}

.nav-mobile {
  display: none;
}

.pad-top {
  padding-top: map.get($spacing, md);
}

.pad-bottom {
  padding-bottom: map.get($spacing, 2xl);
}

.max-width {
  max-width: $container-width;
}

// ===================================
// COMPONENTS: Header
// ===================================

nav ul {
  @include flex(row, map.get($spacing, md));
  margin: 0;
  justify-content: stretch;
  align-items: flex-start;
  color: map.get($colors, text-subtle);

  li:last-child {
    margin-bottom: revert;
  }
}

.modal {
	display: none;
	position: fixed;
	z-index: 999;
	inset: 0;
	background: rgba(0, 0, 0, 0.5);
	align-items: center;
	justify-content: center;
  padding-inline: map.get($spacing, sm);

	&>div {
		@include flex(column, map.get($spacing, sm));
    justify-content: center;
    align-items: center;
		padding: map.get($spacing, xl);
		background: map.get($colors, bg);
		border: $border-width dotted map.get($colors, text);
		border-radius: map.get($spacing, sm);
		text-align: center;
    max-width: $container-width / 1.333;

		p {
			margin: 0;
			color: map.get($colors, text-subtle);
		}

		button {
			margin-top: map.get($spacing, md);
      width: fit-content;
		}
	}
}

body.split-screen {
  padding-top: calc(map.get($spacing, xl) + map.get($spacing, sm));
}

// ===================================
// COMPONENTS: Footer
// ===================================

footer {
  width: 100%;
  min-height: fit-content;
  margin: 0;
  padding: 0;
  border-top: $border-width solid map.get($colors, border);

  section {
    @include flex(column, map.get($spacing, xl));
    justify-content: flex-end;
    align-items: flex-start;

    a:hover,
    a:focus-visible {
      color: map.get($colors, bg-more-translucent);
      text-decoration-color: map.get($colors, bg-more-translucent);
    }

    h2,
    p,
    a,
    span {
      margin: map.get($spacing, xs) 0 0;
    }

    .logo {
      fill: map.get($colors, bg);
    }

    .f-innergroup {
      @include flex(column, map.get($spacing, sm));
      gap: map.get($spacing, xs);
      justify-content: flex-start;
      align-items: stretch;

      h2,
      a {
        margin: 0;
        padding: 0;
      }
    }
  }
}

// ===================================
// COMPONENTS: Buttons
// ===================================

button {
  padding: map.get($spacing, sm) map.get($spacing, md);
  border: none;
  border-radius: map.get($spacing, xs);
  background: map.get($colors, links);
  color: map.get($colors, bg);
  font-size: $font-base;
  font-family: inherit;
  text-align: inherit;
  word-break: break-word;
  box-shadow: none;
  cursor: pointer;
  transition: all $transition-speed ease-in-out;

  &:hover,
  &:focus-visible {
    background: map.get($colors, links-subtle);
  }

  &.secondary {
    background: map.get($colors, bg-translucent);
    color: map.get($colors, text-subtle);
    border: $border-width solid map.get($colors, border);

    &:hover,
    &:focus-visible {
      background: map.get($colors, bg-more-translucent);
    }
  }
}

.button-group {
  @include flex(row, map.get($spacing, sm));
  margin-top: map.get($spacing, md);
  flex-wrap: wrap;
  justify-content: start;
  align-items: stretch;
  overflow: hidden;
  transition: opacity 0.3s, height 0.5s cubic-bezier(0.4, 2, 0.6, 1);
}

// ===================================
// COMPONENTS: Content
// ===================================

.pop {
  margin-top: map.get($spacing, md);
  padding: map.get($spacing, md);
  background: map.get($colors, bg-translucent);
  border: $border-width solid map.get($colors, border);
  border-radius: map.get($spacing, xs);

  h2:first-of-type {
    padding-top: map.get($spacing, xs);
  }
}

.projects-showcase {
  @include flex(column, map.get($spacing, 2xl));
  flex-wrap: wrap;

  img {
    background: map.get($colors, bg-translucent);
    border: $border-width solid map.get($colors, border);
    border-radius: map.get($spacing, xs);
  }
}

.work {
  @include flex(column, map.get($spacing, xs));
  flex-wrap: wrap;

  .role {
    color: map.get($colors, text-subtle);
  }

  figure figcaption {
    font-weight: 600;
    font-size: revert;
  }
}

.whatyouget {

  h2,
  div {
    margin-bottom: map.get($spacing, lg);
  }

  div:last-of-type {
    margin-bottom: 0;
  }

  h3 {
    margin-bottom: map.get($spacing, sm);
    color: map.get($colors, text-subtle);
  }
}

.testimonials {
  @include flex(column, map.get($spacing, sm));

  .quote {
    @include flex;
    width: 100%;
    padding: map.get($spacing, lg);
    justify-content: space-between;
    align-items: stretch;
    background: map.get($colors, bg-translucent);
    border: $border-width solid map.get($colors, border);
    border-radius: map.get($spacing, xs);

    >div {
      @include flex(row, map.get($spacing, md));

      .credit {
        @include flex(column, map.get($spacing, xs));
        flex: 1 1 100%;
        justify-content: flex-start;
        align-content: start;
        flex-wrap: nowrap;

        p {
          margin: 0;
        }
      }
    }
  }
}

.faq {
  h2 {
    @extend .light;
  }

  ul li {
    display: revert;

    &:not(:last-child) {
      padding-bottom: map.get($spacing, sm);
    }
  }
}

// ===================================
// COMPONENTS: Slideframe
// ===================================

.slideframe {
  position: fixed;
  z-index: 99999;
  pointer-events: none;

  &--visible {
    pointer-events: auto;

    .slideframe-generalclose {
      visibility: visible;
      opacity: 1;
      pointer-events: auto;
    }

    .slideframe-container {
      right: 0;
    }
  }

  &-generalclose {
    display: block;
    position: fixed;
    inset: 0;
    z-index: 99998;
    background: rgba(0, 0, 0, 0.25);
    visibility: hidden;
    opacity: 0;
    pointer-events: none;
    transition: all 0.1s ease-out;
  }

  &-container {
    position: fixed;
    inset: 0 -100% 0 auto;
    z-index: 99999;
    width: 95%;
    height: 100%;
    border: $border-width solid map.get($colors, border);
    transition: right 0.6s cubic-bezier(0.075, 0.82, 0.165, 1);

    &-titlebar {
      @include flex(row);
      min-height: map.get($spacing, xl);
      padding: map.get($spacing, sm);
      background: map.get($colors, bg);
      border-bottom: $border-width solid map.get($colors, border);
      color: map.get($colors, text);
      font-family: $font-base;
      font-size: $font-base;
      line-height: $line-height-tight;

      strong {
        font-weight: normal;
        font: inherit;
        color: inherit;
      }

      &-title {
        flex-grow: 1;
        padding: 0 map.get($spacing, md);
        text-align: center;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;

        &:before {
          content: '\25CF';
          position: absolute;
          margin-left: calc(map.get($spacing, lg) * -1);
          opacity: 0;
          animation: sl-circle infinite 0.8s;
          transition: opacity 0.4s;
        }
      }
    }

    &-frame {
      width: 100%;
      height: calc(100% - map.get($spacing, xl));
      border: none;
      background: map.get($colors, bg);
    }
  }
}

.slideframe-btn {
  display: block;
  flex-shrink: 0;
  width: map.get($spacing, xl);
  height: 100%;
  padding: 0;
  border: none;
  background: none;
  color: inherit;
  font-family: inherit;
  font-size: map.get($spacing, lg);
  line-height: inherit;
  text-align: center;
  text-decoration: none;
  cursor: pointer;
  appearance: none;

  &:hover {
    @extend .slideframe-btn;
  }
}

.slideframe-body {
  &--noscroll {
    overflow: hidden;
  }

  &--loading {
    * {
      cursor: wait;
    }

    .slideframe-container-titlebar-title:before {
      opacity: 1;
      transform-origin: 50% 50%;
    }
  }
}

// ===================================
// UTILITIES
// ===================================

.light {
  @extend h2;
  color: map.get($colors, text-faint);
}

ul.plain-list {
  @extend section;
  gap: map.get($spacing, xs);
  margin-left: 0;
  color: map.get($colors, text-subtle);
  list-style: none;
}

// ===================================
// RESPONSIVE
// ===================================

@media only screen and (max-width: map.get($breakpoints, md)) {
  .work {
    margin-bottom: map.get($spacing, lg);
  }

  .projects-showcase>* {
    flex: 1 1 40%;
  }

  .split-screen {
    grid-template-columns: 1fr;

    header.space-between {
      position: revert;
      height: 100%;
    }
  }

  body.split-screen {
    padding-top: map.get($spacing, lg);
  }

  header {
    padding-bottom: map.get($spacing, lg);
  }

  // Hide desktop nav on mobile
  .nav-desktop {
    display: none;
  }

  // Show mobile nav
  .nav-mobile {
    display: block;
    padding-top: map.get($spacing, md);
  }

  nav {
    padding: map.get($spacing, sm) map.get($spacing, sm) 0 0;
    border-top: $border-width solid map.get($colors, border);
  }
}

@media only screen and (max-width: map.get($breakpoints, sm)) {
  .slideframe-container {
    width: 100%;
  }

  .ext-link+p {
    max-width: 95%;
  }

  .projects-showcase {
    gap: map.get($spacing, md);

    >* {
      flex: 1 1 100%;
    }
  }

  nav {
    width: 100%;
    ul {
    gap: calc(map.get($spacing, sm));
    font-size: calc($font-base / 1.15);
  }
}
}

// ===================================
// EXPERIMENTAL
// ===================================

@view-transition {
  navigation: auto;
}