@use 'sass:map';

/*!
 * Main Stylesheet
 * Author: Francesco Imola
 */

// ===================================
// SETTINGS: Variables & Maps
// ===================================

// Magic numbers as variables
$golden-ratio: 1.618;
$perfect-fourth: 1.333;
$opacity-fix: 0.99; // Prevents rendering issues
$icon-scale: 4.5;
$logo-scale: 3;

// Typography
$font-base: 'Inter Variable', -apple-system, BlinkMacSystemFont, 'Segoe UI',
	Roboto, sans-serif;

$font-sizes: (
	base: 1rem,
	small: 0.9rem,
	large: 1.3rem,
	xl: 1.3rem * 1.7,
	clamp: clamp(0.8rem, 1.1vw, 1.2rem),
);

$line-heights: (
	base: 1 + calc($perfect-fourth / 2),
	tight: 1 + calc($perfect-fourth / 3),
);

// Spacing
$unit: 0.25rem;
$spacing: (
	xs: $unit,
	sm: $unit * 2,
	md: $unit * 4,
	lg: $unit * 6,
	xl: $unit * 10,
	2xl: $unit * 16,
);

// Colors
$colors: (
	bg: #f6f6f6,
	text: hsl(129, 52%, 5%),
	text-subtle: color-mix(in srgb, #061308 80%, #f6f6f6),
	text-faint: color-mix(in srgb, #061308 60%, #f6f6f6),
	links: #00610f,
	links-subtle: #86cb90,
	red: #ff6149,
	bg-translucent: color-mix(in srgb, #f6f6f6 97%, #061308),
	bg-more-translucent: color-mix(in srgb, #f6f6f6 87%, #061308),
	border: color-mix(in srgb, #f6f6f6 75%, #061308),
);

// Layout
$container-width: 58ch;
$border-width: $golden-ratio * 1px;
$ext-icon-size: map.get($spacing, sm) + map.get($spacing, xs);
$transition-speed: 150ms;

// Breakpoints
$breakpoints: (
	md: 820px,
	sm: 480px,
);

// ===================================
// TOOLS: Mixins
// ===================================

@mixin flex($dir: column, $gap: null) {
	display: flex;
	flex-direction: $dir;
	@if $gap { gap: $gap; }
}

// ===================================
// GENERIC: Reset
// ===================================

*, *::before, *::after { box-sizing: border-box; }

html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center, dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
	margin: 0;
	padding: 0;
	border: 0;
	font: inherit;
	font-size: 100%;
	vertical-align: baseline;
}

article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section { display: block; }

ol, ul { list-style: none; }

blockquote, q {
	quotes: none;
	&:before, &:after { content: none; }
}

table { border-collapse: collapse; border-spacing: 0; }

// ===================================
// BASE: Root Elements
// ===================================

html {
	font-size: 100%;
	height: 100%;
	scroll-behavior: smooth;
	-webkit-text-size-adjust: 100%;
	overflow: auto;
}

body {
	height: 100%;
	width: 100%;
	margin: 0;
	padding: 0;
	overflow: hidden scroll;
	font-family: $font-base;
	font-size: map.get($font-sizes, clamp);
	font-weight: 400;
	line-height: map.get($line-heights, base);
	letter-spacing: -0.015em;
	font-feature-settings: 'ss01' 1, 'ss03' 1;
	font-optical-sizing: auto;
	color: map.get($colors, text);
	background: map.get($colors, bg);

	*:focus-visible {
		outline: $border-width solid map.get($colors, text);
		outline-offset: calc($border-width * 2);
	}
}

// ===================================
// FONTS
// ===================================

@font-face {
	font-family: 'Inter Variable';
	src: url('/fonts/InterVariable.woff2') format('woff2 supports variations'),
		url('/fonts/InterVariable.woff2') format('woff2-variations');
	font-weight: 100 900;
	font-style: normal;
	font-display: swap;
}

@font-face {
	font-family: 'Inter Variable';
	src: url('/fonts/InterVariable-Italic.woff2') format('woff2 supports variations'),
		url('/fonts/InterVariable-Italic.woff2') format('woff2-variations');
	font-weight: 100 900;
	font-style: italic;
	font-display: swap;
}

// ===================================
// ELEMENTS: Typography
// ===================================

h1, h2, h3, h4, h5, h6 {
	margin: 0 0 map.get($spacing, sm);
	font-weight: 600;
	font-size: map.get($font-sizes, large);
	line-height: map.get($line-heights, tight);
	letter-spacing: -0.025em;
	color: map.get($colors, text);
	text-rendering: optimizeLegibility;
	text-wrap: balance;
}

h2 { padding-top: map.get($spacing, md); }

h3 {
	font-size: map.get($font-sizes, base);
	line-height: map.get($line-heights, base);
}

p {
	margin: 0 0 map.get($spacing, sm);
	color: map.get($colors, text-subtle);
	text-rendering: optimizeSpeed;
	text-wrap: pretty;
	&:last-child { margin-bottom: 0; }
}

a {
	width: fit-content;
	color: currentColor;
	text-decoration: calc($unit/($perfect-fourth * 2)) underline;
	text-underline-offset: map.get($spacing, xs);
	transition: all $transition-speed ease-in-out;
	&:focus { outline: auto; }
	h2 { color: inherit; }
}

small {
	font-size: map.get($font-sizes, small);
	color: map.get($colors, text-subtle);
}

i { font-style: italic; letter-spacing: revert; }
b { font-weight: 600; }

ul, ol {
	margin: 0 0 0 map.get($spacing, md);
	padding: 0;
	color: map.get($colors, text-subtle);
	list-style: none;
	li:last-child { margin-bottom: map.get($spacing, sm); }
}

ol {
	list-style: decimal;
	li {
		display: list-item;
		padding-bottom: map.get($spacing, sm);
	}
}

li { display: inline-block; margin: 0; }

// ===================================
// ELEMENTS: Media
// ===================================

svg, img {
	display: block;
	max-width: 100%;
	height: auto;
	fill: map.get($colors, text);
	image-rendering: crisp-edges;
	opacity: $opacity-fix;

	&.give-border {
		border: $border-width solid map.get($colors, border);
		border-radius: map.get($spacing, xs);
	}
}

img.hero {
	min-width: calc(map.get($spacing, 2xl) * $icon-scale);
	max-width: 25vw;
	margin: 0 auto;
	padding: map.get($spacing, 2xl) 0;
	object-fit: contain;
}

figure {
	@include flex(column, map.get($spacing, xs));
	width: 100%;
	figcaption {
		margin-top: map.get($spacing, sm);
		font-size: map.get($font-sizes, small);
	}
}

details > summary {
	gap: map.get($spacing, lg);
	h2 { display: inline; }
}

// ===================================
// LAYOUT
// ===================================

main, section {
	@include flex;
	width: 100%;
	justify-content: flex-start;
	align-content: start;
	flex-wrap: nowrap;
}

main {
	position: relative;
	padding-bottom: map.get($spacing, xl);
	align-content: center;
	background: map.get($colors, bg);
	border-bottom: $border-width solid map.get($colors, border);
}

.center {
	margin: 0 auto;
	padding-inline: clamp(0rem, 1rem - 1vw, 2rem);
}

.pad-top { padding-top: map.get($spacing, md); }
.pad-bottom { padding-bottom: map.get($spacing, 2xl); }
.max-width { max-width: $container-width; }

// ===================================
// COMPONENTS: Header
// ===================================

header {
	@include flex(column, map.get($spacing, xl));
	width: 100%;
	margin-top: map.get($spacing, xs);
	justify-content: space-between;
	flex-wrap: wrap;
	background: map.get($colors, bg);

	> div span {
		display: block;
		margin-top: map.get($spacing, sm);
		color: map.get($colors, text-faint);
	}

	a svg {
		width: calc(map.get($spacing, 2xl) * $logo-scale);
		height: auto;
		fill: map.get($colors, text);
		outline: $border-width solid transparent;
		outline-offset: calc($border-width * 2);
		transition: all $transition-speed ease-in-out;
	}

	nav {
		border-bottom: $border-width solid map.get($colors, border);
		font-size: map.get($font-sizes, small);

		ul {
			@include flex(row, map.get($spacing, md));
			margin: 0;
			justify-content: stretch;
			align-items: flex-start;
			color: map.get($colors, text-subtle);

			a {
				text-decoration: none;
				&.active { font-weight: 600; text-decoration: underline; }
			}
		}
	}
}

// ===================================
// COMPONENTS: Footer
// ===================================

footer {
	width: 100%;
	min-height: fit-content;
	margin: 0;
	padding: 0;
	background: map.get($colors, links);

	section {
		@include flex(column, map.get($spacing, xl));
		justify-content: flex-end;
		align-items: flex-start;
		color: map.get($colors, bg-translucent);

		h2, p, a, span {
			margin: map.get($spacing, xs) 0 0;
			font-size: map.get($font-sizes, small);
			color: map.get($colors, bg-translucent);
		}

		.logo { fill: map.get($colors, bg); }

		.f-innergroup {
			@include flex(column, map.get($spacing, sm));
			gap: map.get($spacing, xs);
			justify-content: flex-start;
			align-items: stretch;

			h2, a { margin: 0; padding: 0; }
		}
	}
}

// ===================================
// COMPONENTS: Buttons
// ===================================

button {
	padding: map.get($spacing, sm) map.get($spacing, md);
	border: none;
	border-radius: map.get($spacing, xs);
	background: map.get($colors, links);
	color: map.get($colors, bg);
	font-family: inherit;
	font-size: map.get($font-sizes, small);
	text-align: inherit;
	word-break: break-word;
	box-shadow: none;
	cursor: pointer;
	transition: all $transition-speed ease-in-out;

	&:hover, &:focus-visible { background: map.get($colors, links-subtle); }

	&.secondary {
		background: map.get($colors, bg-translucent);
		color: map.get($colors, text-subtle);
		border: $border-width solid map.get($colors, border);

		&:hover, &:focus-visible { background: map.get($colors, bg-more-translucent); }
	}
}

.button-group {
	@include flex(row, map.get($spacing, sm));
	margin-top: map.get($spacing, md);
	justify-content: start;
	align-items: stretch;
	overflow: hidden;
	transition: opacity 0.3s, height 0.5s cubic-bezier(0.4, 2, 0.6, 1);
}

// ===================================
// COMPONENTS: Content
// ===================================

.pop {
	margin-top: map.get($spacing, md);
	padding: map.get($spacing, md);
	background: map.get($colors, bg-translucent);
	border: $border-width solid map.get($colors, border);
	border-radius: map.get($spacing, xs);

	h2:first-of-type { padding-top: map.get($spacing, xs); }
}

.projects-showcase {
	@include flex(column, map.get($spacing, 2xl));
	flex-wrap: wrap;

	img {
		background: map.get($colors, bg-translucent);
		border: $border-width solid map.get($colors, border);
		border-radius: map.get($spacing, xs);
	}
}

.work {
	@include flex(column, map.get($spacing, xs));
	flex-wrap: wrap;

	.role { color: map.get($colors, text-subtle); }
	figure figcaption { font-weight: 600; font-size: revert; }
}

.whatyouget {
	h2, div { margin-bottom: map.get($spacing, lg); }
	div:last-of-type { margin-bottom: 0; }
	h3 {
		margin-bottom: map.get($spacing, sm);
		color: map.get($colors, text-subtle);
	}
}

.testimonials {
	@include flex(column, map.get($spacing, sm));
	margin-top: map.get($spacing, md);

	.quote {
		@include flex;
		width: 100%;
		padding: map.get($spacing, lg);
		justify-content: space-between;
		align-items: stretch;
		background: map.get($colors, bg-translucent);
		border: $border-width solid map.get($colors, border);
		border-radius: map.get($spacing, xs);

		> div {
			@include flex(row, map.get($spacing, md));
			margin-top: map.get($spacing, md);

			svg {
				display: block;
				width: auto;
				height: 100%;
				flex: 1 1 10%;
				border: calc($border-width/2) solid map.get($colors, border);
				border-radius: map.get($spacing, xs);
			}

			.credit {
				@include flex(column, map.get($spacing, xs));
				flex: 1 1 100%;
				justify-content: flex-start;
				align-content: start;
				flex-wrap: nowrap;
			}
		}
	}
}

.faq {
	h2 { @extend .light; }
	ul li {
		display: revert;
		&:not(:last-child) { padding-bottom: map.get($spacing, sm); }
	}
}

// ===================================
// COMPONENTS: Slideframe
// ===================================

.slideframe {
	position: fixed;
	z-index: 99999;
	pointer-events: none;

	&--visible {
		pointer-events: auto;

		.slideframe-generalclose {
			visibility: visible;
			opacity: 1;
			pointer-events: auto;
		}

		.slideframe-container { right: 0; }
	}

	&-generalclose {
		display: block;
		position: fixed;
		inset: 0;
		z-index: 99998;
		background: rgba(0, 0, 0, 0.25);
		visibility: hidden;
		opacity: 0;
		pointer-events: none;
		transition: all 0.1s ease-out;
	}

	&-container {
		position: fixed;
		inset: 0 -100% 0 auto;
		z-index: 99999;
		width: 95%;
		height: 100%;
		border: $border-width solid map.get($colors, border);
		transition: right 0.6s cubic-bezier(0.075, 0.82, 0.165, 1);

		&-titlebar {
			@include flex(row);
			min-height: map.get($spacing, xl);
			padding: map.get($spacing, sm);
			background: map.get($colors, bg);
			border-bottom: $border-width solid map.get($colors, border);
			color: map.get($colors, text);
			font-family: $font-base;
			font-size: map.get($font-sizes, base);
			line-height: map.get($spacing, xl);

			strong {
				font-weight: normal;
				font: inherit;
				color: inherit;
			}

			&-title {
				flex-grow: 1;
				padding: 0 map.get($spacing, md);
				text-align: center;
				white-space: nowrap;
				overflow: hidden;
				text-overflow: ellipsis;

				&:before {
					content: '\25CF';
					position: absolute;
					margin-left: calc(map.get($spacing, lg) * -1);
					opacity: 0;
					animation: sl-circle infinite 0.8s;
					transition: opacity 0.4s;
				}
			}
		}

		&-frame {
			width: 100%;
			height: calc(100% - map.get($spacing, xl));
			border: none;
			background: map.get($colors, bg);
		}
	}
}

.slideframe-btn {
	display: block;
	flex-shrink: 0;
	width: map.get($spacing, xl);
	height: 100%;
	padding: 0;
	border: none;
	background: none;
	color: inherit;
	font-family: inherit;
	font-size: map.get($spacing, lg);
	line-height: inherit;
	text-align: center;
	text-decoration: none;
	cursor: pointer;
	appearance: none;

	&:hover { @extend .slideframe-btn; }
}

.slideframe-body {
	&--noscroll { overflow: hidden; }
	&--loading {
		* { cursor: wait; }
		.slideframe-container-titlebar-title:before {
			opacity: 1;
			transform-origin: 50% 50%;
		}
	}
}

// ===================================
// UTILITIES
// ===================================

.light {
	@extend h2;
	color: map.get($colors, text-faint);
}

.ext-link {
	display: inline-flex;
	width: max-content;
	padding-right: 5px;
	justify-content: center;
	border: $border-width solid transparent;
	cursor: pointer;

	&::after {
		content: '\00a0 ↗';
		position: static;
		inset: calc(map.get($spacing, xs) / $perfect-fourth) map.get($spacing, xs) auto auto;
		width: $ext-icon-size;
		height: $ext-icon-size;
	}
}

ul.plain-list {
	@extend section;
	gap: map.get($spacing, xs);
	margin-left: 0;
	color: map.get($colors, text-subtle);
	list-style: none;
}

p + .ext-link,
p + .link { margin-top: map.get($spacing, sm); }

.ext-link + small,
.link + small { margin-top: map.get($spacing, sm); }

// ===================================
// STATES: Hover
// ===================================

@media (hover: hover) and (pointer: fine) {
	a {
		&:hover, &:focus-visible,
		&.active:hover, &.active:focus-visible {
			color: map.get($colors, links);
			text-decoration-color: map.get($colors, links);
		}
	}

	footer section a {
		&:hover, &:focus-visible {
			color: map.get($colors, bg-more-translucent);
			text-decoration-color: map.get($colors, bg-more-translucent);
		}
	}

	header {
		nav ul a:hover { text-decoration: underline; }
		a svg:hover {
			outline: calc($border-width/2) solid map.get($colors, text-faint);
			outline-offset: calc($border-width * 2);
			border-radius: map.get($spacing, xs);
		}
	}
}

// ===================================
// RESPONSIVE
// ===================================

@media only screen and (max-width: map.get($breakpoints, md)) {
	.work { margin-bottom: map.get($spacing, lg); }
	.projects-showcase > * { flex: 1 1 40%; }
}

@media only screen and (max-width: map.get($breakpoints, sm)) {
	.slideframe-container { width: 100%; }
	.ext-link + small { max-width: 95%; }
	button { font-size: unset; }
	header nav ul { gap: calc(map.get($spacing, sm) * $golden-ratio); }
	.projects-showcase {
		gap: map.get($spacing, md);
		> * { flex: 1 1 100%; }
	}
}

// ===================================
// EXPERIMENTAL
// ===================================

@view-transition { navigation: auto; }