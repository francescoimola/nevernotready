@use 'sass:map';

/*!
 * Main Stylesheet
 * Author: Francesco Imola
 */

// --- VARIABLES & MAPS ---
$perfect-fourth: 1.333;
$unit: 0.25rem;
$font-base: 'Inter Variable', -apple-system, BlinkMacSystemFont, 'Segoe UI',
  Roboto, sans-serif;
$transition-speed: 150ms;

$colors: (
  bg: #f6f6f6,
  text: hsl(129, 52%, 5%),
  text-subtle: color-mix(in srgb, #061308 80%, #f6f6f6),
  links: #00610f,
  links-subtle: #86cb90,
  red: #ff6149,
  bg-translucent: color-mix(in srgb, #f6f6f6 97%, #061308),
  bg-more-translucent: color-mix(in srgb, #f6f6f6 87%, #061308),
  border: color-mix(in srgb, #f6f6f6 75%, #061308),
);

$spacing: (
  xs: $unit,
  sm: $unit * 2,
  md: $unit * 4,
  lg: $unit * 6,
  xl: $unit * 10,
  2xl: $unit * 16,
);

$breakpoints: (
  md: 820px,
  sm: 480px,
);

$font-sizes: (
  base: 1rem,
  small: 0.9rem,
  large: 1.3rem,
  xl: 1.3rem * 1.7,
  clamp: clamp(0.8rem, 1.1vw, 1.2rem),
);

$line-heights: (
  base: 1 + calc($perfect-fourth / 2),
  tight: 1 + calc($perfect-fourth / 3),
);

$container-width: 58ch;
$border-width: 1.618px;
$ext-icon-size: map.get($spacing, sm) + map.get($spacing, xs);

// --- MIXINS ---
@mixin flex-col($gap: null) {
  display: flex;
  flex-direction: column;
  @if $gap {
    gap: $gap;
  }
}

@mixin flex-row($gap: null) {
  display: flex;
  flex-direction: row;
  @if $gap {
    gap: $gap;
  }
}

// --- RESET & BASE ---
*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html {
  font-size: 100%;
  scroll-behavior: smooth;
  -webkit-text-size-adjust: 100%;
  height: 100%;
}

body {
  margin: 0;
  padding: 0;
  line-height: map.get($line-heights, base);
  font-family: $font-base;
  font-size: map.get($font-sizes, clamp);
  letter-spacing: -0.015em;
  font-weight: 400;
  -webkit-font-smoothing: antialiased;
  font-feature-settings: 'ss01' 1, 'ss03' 1;
  font-optical-sizing: auto;
  color: map.get($colors, text);
  overflow-x: hidden;

  & *:focus-visible {
    outline: $border-width solid map.get($colors, text);
    outline-offset: calc($border-width * 2);
  }
}

main {
  padding-bottom: map.get($spacing, xl);
  border-bottom: $border-width solid map.get($colors, border);
}

svg,
img {
  display: block;
  max-width: 100%;
  height: auto;
  fill: map.get($colors, text);
  image-rendering: crisp-edges;
  opacity: 0.99;

  &.give-border {
    border: $border-width solid map.get($colors, border);
    border-radius: map.get($spacing, xs);
  }
}

img {

  &.hero {
    padding: map.get($spacing, 2xl) 0;
    min-width: calc(map.get($spacing, 2xl) * 4.5);
    max-width: 25vw;
    height: auto;
    margin: 0 auto;
    object-fit: contain;
  }
}

figure {
  @include flex-col(map.get($spacing, xs));
  width: 100%;

  figcaption {
    margin-top: map.get($spacing, sm);
    font-size: map.get($font-sizes, small);
  }
}

details > summary h2 {
  display: inline;
}
details > summary {
  gap: map.get($spacing, lg);
}

h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0 0 map.get($spacing, sm) 0;
  font-weight: 600;
  font-size: map.get($font-sizes, large);
  line-height: map.get($line-heights, tight);
  color: map.get($colors, text);
  text-rendering: optimizeLegibility;
  text-wrap: balance;
  letter-spacing: -0.025em;
}

h2 {
  padding-top: map.get($spacing, md);
}

h3 {
  font-size: map.get($font-sizes, base);
  line-height: map.get($line-heights, base);
}

p {
  margin: 0 0 map.get($spacing, sm) 0;
  color: map.get($colors, text-subtle);
  text-rendering: optimizeSpeed;
  text-wrap: pretty;

  &:last-child {
    margin-bottom: 0;
  }
}

a {
  color: currentColor;
  text-decoration: calc($unit/($perfect-fourth * 2)) underline currentColor;
  text-underline-offset: map.get($spacing, xs);
  transition: all $transition-speed ease-in-out;
  &:focus {
    outline: auto;
  }
  h2 {
    color: inherit;
  }
}

small {
  font-size: map.get($font-sizes, small);
  color: map.get($colors, text-subtle);
}

ul,
ol {
  list-style-type: none;
  margin-left: map.get($spacing, md);
  color: map.get($colors, text-subtle);
  margin-block-start: 0;
  margin-block-end: 0;
  padding-inline-start: 0;
  li:last-child {
    margin-bottom: map.get($spacing, sm);
  }
}

ol {
  list-style-type: decimal;
  li {
    display: list-item;
    padding-bottom: map.get($spacing, sm);
  }
}

i {
  font-style: italic;
  letter-spacing: revert;
}
b {
  font-weight: 600;
}

li {
  margin: 0;
  display: inline-block;
}

.light {
  @extend h2;
  color: map.get($colors, text-faint);
}

// --- FONTS ---
@font-face {
  font-family: 'Inter Variable';
  src: url('/fonts/InterVariable.woff2') format('woff2 supports variations'),
    url('/fonts/InterVariable.woff2') format('woff2-variations');
  font-weight: 100 900;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: 'Inter Variable';
  src: url('/fonts/InterVariable-Italic.woff2')
      format('woff2 supports variations'),
    url('/fonts/InterVariable-Italic.woff2') format('woff2-variations');
  font-weight: 100 900;
  font-style: italic;
  font-display: swap;
}

// --- LAYOUT ---
main,
.g-wrapper {
  @include flex-col();
  justify-content: flex-start;
  align-content: center;
  width: 100%;
  background: map.get($colors, bg);
  z-index: 1;
  position: relative;
}

.center {
  margin: 0 auto;
  padding-right: clamp(0rem, 1rem - 1vw, 2rem);
  padding-left: clamp(0rem, 1rem - 1vw, 2rem);
}
.pad-top {
  padding-top: map.get($spacing, md);
}
.pad-bottom {
  padding-bottom: map.get($spacing, 2xl);
}
.max-width {
  max-width: $container-width;
}

.projects-showcase {
  @include flex-col(map.get($spacing, 2xl));
  flex-wrap: wrap;

  img {
    border-radius: map.get($spacing, xs);
    background-color: map.get($colors, bg-translucent);
    border: $border-width solid map.get($colors, border);
  }
}

section {
  @include flex-col();
  justify-content: flex-start;
  align-content: start;
  flex-wrap: nowrap;
  width: 100%;
}

.whatyouget {
  h2,
  div {
    margin-bottom: map.get($spacing, lg);
  }
  div:last-of-type {
    margin-bottom: 0;
  }
  h3 {
    color: map.get($colors, text-subtle);
    margin-bottom: map.get($spacing, sm);
  }
}

.testimonials {
  @include flex-col(map.get($spacing, sm));
  margin-top: map.get($spacing, md);
  .quote {
    width: 100%;
    background-color: map.get($colors, bg-translucent);
    border: $border-width solid map.get($colors, border);
    border-radius: map.get($spacing, xs);
    @include flex-col();
    justify-content: space-between;
    flex-wrap: nowrap;
    align-items: stretch;
    padding: map.get($spacing, lg);

    > div {
      @include flex-row(map.get($spacing, md));
      margin-top: map.get($spacing, md);

      svg {
        display: block;
        width: auto;
        height: 100%;
        flex: 1 1 10%;
        border: calc($border-width/2) solid map.get($colors, border);
        border-radius: map.get($spacing, xs);
      }

      .credit {
        @include flex-col(map.get($spacing, xs));
        flex: 1 1 100%;
        justify-content: flex-start;
        align-content: start;
        flex-wrap: nowrap;
      }
    }
  }
}

.faq {
  h2 {
    @extend .light;
  }

  ul li {
    display: revert;
    &:not(:last-child) {
      padding-bottom: map.get($spacing, sm);
    }
  }
}

// --- COMPONENTS ---
.pop {
  background-color: map.get($colors, bg-translucent);
  margin-top: map.get($spacing, md);
  padding: map.get($spacing, md);
  border: $border-width solid map.get($colors, border);
  border-radius: map.get($spacing, xs);

  & h2:first-of-type {
    padding-top: map.get($spacing, xs);
  }
}

header {
  width: 100%;
  @include flex-col(map.get($spacing, xl));
  flex-wrap: wrap;
  justify-content: space-between;
  margin-top: map.get($spacing, xs);

  > div span {
    display: block;
    margin-top: map.get($spacing, sm);
    color: map.get($colors, text-faint);
  }
  a {
    svg {
      width: calc(map.get($spacing, 2xl) * 3);
      height: auto;
      fill: map.get($colors, text);
      outline: $border-width solid transparent;
      outline-offset: calc($border-width * 2);
      transition: all $transition-speed ease-in-out;
    }
  }

  nav {
    border-bottom: $border-width solid map.get($colors, border);
    font-size: map.get($font-sizes, small);
    ul {
      margin: 0;
      list-style-type: none;
      @include flex-row(map.get($spacing, md));
      justify-content: baseline;
      align-items: flex-start;
      color: map.get($colors, text-subtle);

      a {
        text-decoration: none;
      }

      a.active {
        font-weight: 600;
        text-decoration: underline;
      }
    }
  }
}

.work {
  @include flex-col(map.get($spacing, xs));
  flex-wrap: wrap;
  .role {
    color: map.get($colors, text-subtle);
  }
  figure figcaption {
    font-weight: 600;
    font-size: revert;
  }
}

.button-group {
  margin-top: map.get($spacing, md);
  @include flex-row(map.get($spacing, sm));
  justify-content: start;
  align-items: stretch;
  gap: map.get($spacing, sm);
  overflow: hidden;
  transition: opacity 0.3s, height 0.5s cubic-bezier(0.4, 2, 0.6, 1);
}

button {
  padding: map.get($spacing, sm) map.get($spacing, md);
  background-color: map.get($colors, links);
  color: map.get($colors, bg);
  font-size: map.get($font-sizes, small);
  border-radius: map.get($spacing, xs);
  text-align: inherit;
  box-shadow: none;
  word-break: break-word;
  cursor: pointer;
  font-family: inherit;
  border: none;
  transition: all $transition-speed ease-in-out;

  &.secondary {
    background-color: map.get($colors, bg-translucent);
    color: map.get($colors, text-subtle);
    border: $border-width solid map.get($colors, border);

    &:hover,
    &:focus-visible {
      background-color: map.get($colors, bg-more-translucent);
    }
  }

  &:hover,
  &:focus-visible {
    background-color: map.get($colors, links-subtle);
  }
}

.ext-link {
  display: inline-flex;
  width: max-content;
  padding-right: 5px;
  justify-content: center;
  border: $border-width solid transparent;
  cursor: pointer;
  &::after {
    content: '\00a0 ↗';
    width: $ext-icon-size;
    height: $ext-icon-size;
    position: static;
    right: map.get($spacing, xs);
    top: calc(map.get($spacing, xs) / $perfect-fourth);
  }
}

ul.plain-list {
  @extend section;
  gap: map.get($spacing, xs);
  color: map.get($colors, text-subtle);
  list-style-type: none;
  margin-left: 0;
}

// Footer
footer {
  background-color: map.get($colors, links);
  position: sticky;
  bottom: 0;
  margin: 0;
  padding: 0;
  left: 0;
  width: 100%;
  min-height: fit-content;
  outline: $border-width solid map.get($colors, links);

  section {
    @include flex-col(map.get($spacing, xl));
    justify-content: flex-end;
    align-items: flex-start;
    color: map.get($colors, bg-translucent);

    h2,
    p,
    a,
    span {
      color: map.get($colors, bg-translucent);
      margin: map.get($spacing, xs) 0 0 0;
      font-size: map.get($font-sizes, small);
    }

    .logo {
      fill: map.get($colors, bg);
    }

    .f-innergroup {
      @include flex-col(map.get($spacing, sm));
      justify-content: flex-start;
      align-items: stretch;
      gap: map.get($spacing, xs);

      h2,
      a {
        margin: 0;
        padding: 0;
      }
    }
  }
}

// --- SLIDEFRAME ---
.slideframe {
  position: fixed;
  z-index: 99999;
  pointer-events: none;

  &--visible {
    pointer-events: auto;

    .slideframe-generalclose {
      visibility: visible;
      opacity: 1;
      pointer-events: auto;
    }

    .slideframe-container {
      right: 0;
    }
  }

  &-generalclose {
    display: block;
    position: fixed;
    inset: 0;
    background: rgba(0, 0, 0, 0.25);
    pointer-events: none;
    visibility: hidden;
    opacity: 0;
    transition: all 0.1s ease-out;
    z-index: 99998;
  }

  &-container {
    width: 95%;
    height: 100%;
    position: fixed;
    top: 0;
    bottom: 0;
    right: -100%;
    transition: right 0.6s cubic-bezier(0.075, 0.82, 0.165, 1);
    border: $border-width solid map.get($colors, border);
    z-index: 99999;

    &-titlebar {
      min-height: map.get($spacing, xl);
      line-height: map.get($spacing, xl);
      background: map.get($colors, bg);
      color: map.get($colors, text);
      -webkit-font-smoothing: antialiased;
      display: flex;
      font-family: $font-base;
      font-size: map.get($font-sizes, base);
      padding: map.get($spacing, sm);
      border-bottom: $border-width solid map.get($colors, border);

      strong {
        font-weight: normal;
        color: inherit;
        font: inherit;
      }
    }

    &-frame {
      border: none;
      width: 100%;
      height: calc(100% - map.get($spacing, xl));
      background: map.get($colors, bg);
      background: #fff;
    }

    &-titlebar-title {
      flex-grow: 1;
      text-align: center;
      padding: 0 map.get($spacing, md);
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;

      &:before {
        content: '\25CF';
        position: absolute;
        margin-left: calc(map.get($spacing, lg) * -1);
        animation: sl-circle infinite 0.8s;
        opacity: 0;
        transition: opacity 0.4s;
      }
    }
  }
}

.slideframe-body {
  &--noscroll {
    overflow: hidden;
  }

  &--loading * {
    cursor: wait;

    .slideframe-container-titlebar-title:before {
      opacity: 1;
      transform-origin: 50% 50%;
    }
  }
}

.slideframe-btn,
.slideframe-btn:hover {
  appearance: none;
  display: block;
  flex-shrink: 0;
  height: 100%;
  font-size: map.get($spacing, lg);
  font-family: inherit;
  color: inherit;
  width: map.get($spacing, xl);
  background: none;
  border: none;
  text-align: center;
  text-decoration: none;
  padding: 0;
  cursor: pointer;
  line-height: inherit;
}

// --- UTILITIES ---
p + .ext-link,
p + .link {
  margin-top: map.get($spacing, sm);
}
.ext-link + small,
.link + small {
  margin-top: map.get($spacing, sm);
}

// --- RESPONSIVE ---
@media only screen and (max-width: map.get($breakpoints, md)) {
  .work {
    margin-bottom: map.get($spacing, lg);
  }

  .projects-showcase {
    > * {
      flex: 1 1 40%;
    }
  }
}

@media only screen and (max-width: map.get($breakpoints, sm)) {
  .slideframe-container {
    width: 100%;
  }
  .ext-link + small {
    max-width: 95%;
  }
  button {
    font-size: unset;
  }

  .projects-showcase {
    gap: map.get($spacing, md);
    > * {
      flex: 1 1 100%;
    }
  }
}

@media (hover: hover) and (pointer: fine) {
  a:hover,
  a.active:hover,
  a.active:focus-visible,
  a:focus-visible {
    text-decoration-color: map.get($colors, links);
    color: map.get($colors, links);
  }

  footer section a:hover,
  footer section a:focus-visible {
    color: map.get($colors, bg-more-translucent);
    text-decoration-color: map.get($colors, bg-more-translucent);
  }

  header {
    nav ul a:hover {
      text-decoration: underline;
    }
    a svg:hover {
      outline: calc($border-width/2) solid map.get($colors, text-faint);
      outline-offset: calc($border-width * 2);
      border-radius: map.get($spacing, xs);
    }
  }
}

@view-transition {
  navigation: auto;
}
