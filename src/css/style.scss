//
// FOUNDATIONS
// Variables, functions, mixins, and global configuration
// ----------------------------------

// Color Palette
$colors: (
  bg: #091b14,
  text: #f6f6f6,
  text-muted: rgba(246, 246, 246, 0.75),
  text-subtle: rgba(246, 246, 246, 0.9),
  accent-green: #bcd7a8,
  accent-pink: #f4cfbe,
  accent-blue: #b9d0e4,
  bg-translucent: rgba(9, 27, 20, 0.9),
  bg-transparent: rgba(9, 27, 20, 0.75),
);

// Spacing Scale
$spaces: (
  xs: 0.25rem,
  // 4px
  sm: 0.5rem,
  // 8px
  md: 1rem,
  // 16px
  lg: 1.5rem,
  // 24px
  xl: 2rem,
  // 32px
  2xl: 4rem // 64px,
);

// Breakpoints
$breakpoints: (
  md: 768px,
  sm: 480px,
);

// Typography
$font-base: "Inter Variable", -apple-system, BlinkMacSystemFont, "Segoe UI",
  Roboto, sans-serif;
$font-size-base: clamp(0.875rem, calc(0.82rem + 0.13vw), 1rem);
$font-size-small: clamp(0.75rem, calc(0.7rem + 0.13vw), 1rem);
$font-weight-standard: 400;
$font-weight-bold: 600;

// Other Measurements
$radius: 0.3125rem;
$container-width: min(32.5rem, 100% - 2rem);
$transition: 150ms;
$ext-icon: url("data:image/svg+xml,%3Csvg width='25' height='24' viewBox='0 0 25 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M18.9348 13V19C18.9348 19.5304 18.7241 20.0391 18.349 20.4142C17.974 20.7893 17.4652 21 16.9348 21H5.93481C5.40438 21 4.89567 20.7893 4.5206 20.4142C4.14553 20.0391 3.93481 19.5304 3.93481 19V8C3.93481 7.46957 4.14553 6.96086 4.5206 6.58579C4.89567 6.21071 5.40438 6 5.93481 6H11.9348M15.9348 3H21.9348M21.9348 3V9M21.9348 3L10.9348 14' stroke='%23FFFFFF' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'/%3E%3C/svg%3E");
$ext-icon-size: 0.875rem;

// Helper Functions
@function color($key) {
  @return map-get($colors, $key);
}
@function space($key) {
  @return map-get($spaces, $key);
}
@function breakpoint($key) {
  @return map-get($breakpoints, $key);
}

// Spacing and Sizing Utilities
@function spacing-scale($base-space, $multiplier: 1) {
  @return $base-space * $multiplier;
}

// Mixins
@mixin responsive($breakpoint) {
  @if $breakpoint == md {
    @media (max-width: #{breakpoint(md)}) {
      @content;
    }
  } @else if $breakpoint == sm {
    @media (max-width: #{breakpoint(sm)}) {
      @content;
    }
  }
}

@mixin transition($properties...) {
  transition: $properties $transition ease-in-out allow-discrete;
}

@mixin bg-cover {
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
}

@mixin flex(
  $direction: row,
  $justify: flex-start,
  $align: left,
  $wrap: nowrap
) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;
}

@mixin icon-mask($icon: $ext-icon, $size: contain, $color: currentColor) {
  -webkit-mask-image: $icon;
  mask-image: $icon;
  -webkit-mask-size: $size;
  mask-size: $size;
  -webkit-mask-repeat: no-repeat;
  mask-repeat: no-repeat;
  -webkit-mask-position: center;
  mask-position: center;
  background-color: $color;
}

@mixin focus-visible {
  outline: 0.125rem solid color(text);
  outline-offset: 0.125rem;
}

@mixin cta-color($color) {
  background-color: color($color);
  h2,
  p {
    color: color(bg);
  }
}

@mixin keyframes($name) {
  @keyframes #{$name} {
    @content;
  }
}

// Specific Keyframe Animations
@include keyframes(sl-circle) {
  0%,
  100% {
    transform: scale(0.7);
  }
  50% {
    transform: scale(1.2);
  }
}

//
// RESET & BASE STYLES
// Foundational styling for HTML elements
// ----------------------------------
*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html {
  font-size: 100%;
  scroll-behavior: smooth;
  -webkit-text-size-adjust: 100%;
  height: 100%;
}

body {
  min-height: 100%;
  line-height: 1.6;
  font-family: $font-base;
  font-size: $font-size-base;
  font-weight: $font-weight-standard;
  color: color(text);
  background-color: color(bg);
  -webkit-font-smoothing: antialiased;
}

img,
svg {
  display: block;
  max-width: 100%;
  height: auto;
  border-radius: calc(space(xs) / 1.618);
}

//
// UTILITY CLASSES
// Reusable utility classes for common styling needs
// ----------------------------------
.no-margin-bottom {
  margin-bottom: 0;
}
.wide {
  width: 100%;
}
.newsletter .button-wrapper + small {
  margin-top: space(sm);
}
.visually-hidden {
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 0.0625rem;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
  width: 0.0625rem;
}

//
// TYPOGRAPHY
// Styling for text elements and content
// ----------------------------------
h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0 0 space(xs);
  font-weight: $font-weight-bold;
  font-size: $font-size-base;
  line-height: 1.2;
  color: color(text);
}

h2 {
  margin-top: space(md);
}

p {
  margin: 0 0 space(md);
  color: color(text-muted);
  max-width: 65ch;
  &:last-child {
    margin-bottom: 0;
  }
}

a {
  color: currentColor;
  text-decoration: none;
  text-underline-offset: 0.2em;
  @include transition(color);

  &:hover,
  &:focus-visible,
  &.uline {
    text-decoration: underline;
  }
  &.uline:hover,
  &.uline:focus-visible {
    color: color(text);
  }
  &:focus-visible {
    @include focus-visible;
  }
}

small {
  font-size: $font-size-small;
  color: color(text-muted);
}

.content {
  ul {
    list-style-type: lower-roman;
    margin-left: space(md);
    color: color(text-muted);
    li:last-child {
      margin-bottom: space(sm);
    }
  }

  p {
    margin-bottom: space(xs);
  }
  & + img {
    margin: 0 0 space(sm) 0;
  }
}

.services ul {
  color: color(text-muted);
  max-width: 65ch;
  list-style-type: none;
}

li {
  margin: 0 0 space(xs);
  &:last-child {
    margin-bottom: 0;
  }
}

button:focus-visible {
  @include focus-visible;
}

//
// LAYOUT
// Global layout and grid-related styles
// ----------------------------------
.wrapper {
  width: 100%;
  max-width: $container-width;
  margin: 0 auto;
  padding: space(2xl) 0;
  @include flex(column);
  gap: space(2xl);
}

.main {
  @include flex(column);
  width: 100%;
  gap: space(lg);
}

section {
  @include flex(column);
  width: 100%;
  gap: space(xs);
}

//
// COMPONENTS
// Reusable UI components and their variations
// ----------------------------------

// Navigation
.nav {
  @include flex(row, space-between, center);
  width: 100%;

  &-links {
    display: flex;
    gap: space(lg);
    font-size: $font-size-small;

    a {
      position: relative;
      color: color(text-subtle);
      padding: space(xs);
      margin: calc(space(xs) * -1);

      &:hover {
        text-decoration: none;
      }

      &::after {
        content: "";
        position: absolute;
        width: 0;
        height: 0.0625rem;
        bottom: 0;
        left: space(xs);
        background-color: color(text-subtle);
        @include transition(width);
      }

      &:hover::after,
      &:focus::after,
      &.active::after {
        width: calc(100% - space(sm));
      }
    }
  }
}

.logo-link {
  display: block;
  padding: space(xs);
  margin: calc(space(xs) * -1);
  &:hover {
    text-decoration: none;
  }
}

.notion-avatar {
  width: 2.1875rem;
  height: 2.3125rem;
}

// Buttons and CTAs
.button {
  position: relative;
  display: inline-flex;
  align-items: center;
  padding: space(xs) calc(space(sm) + 1.125rem) space(xs) space(sm);
  background-color: color(bg-translucent);
  color: color(text);
  border-radius: $radius;
  text-decoration: none;
  font-size: $font-size-base;
  @include transition(background-color, color, box-shadow);
  border: 0.0625rem solid transparent;

  &:hover,
  &:focus-visible {
    background-color: color(text);
    color: color(bg);
    text-decoration: none;
    box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.1);
  }

  &:active {
    box-shadow: none;
  }

  // External link icon
  &::after {
    content: "";
    position: absolute;
    right: space(sm);
    width: $ext-icon-size;
    height: $ext-icon-size;
    @include icon-mask($color: color(text));
  }

  &:hover::after,
  &:focus-visible::after {
    @include icon-mask($color: color(bg));
  }

  &.footer-button {
    box-sizing: border-box;
    display: flex;
    justify-content: space-between;
    padding: space(md);
    font-weight: $font-weight-bold;
    &::after {
      right: space(md);
    }
  }

  // Button variants
  &--onwhite {
    background-color: color(bg-translucent);
    color: color(text);
    &::after {
      @include icon-mask($color: color(text-subtle));
    }

    &:hover,
    &:focus-visible {
      background-color: color(text-subtle);
      border-color: color(bg-translucent);
      &::after {
        @include icon-mask($color: color(bg-translucent));
      }
    }
  }

  &--light {
    background-color: color(text-subtle);
    color: color(bg);
    &::after {
      @include icon-mask($color: color(bg));
    }

    &:hover,
    &:focus-visible {
      background-color: color(bg-transparent);
      border-color: color(text);
      color: color(text);
      &::after {
        @include icon-mask($color: color(text));
      }
    }
  }
}

.cta {
  margin-top: space(md);
  padding: space(md);
  border-radius: $radius;
  @include flex(column);
  gap: space(xs);
  background-color: color(text);

  > h2 {
    margin-top: space(xs);
  }

  &--white {
    @include cta-color(text);
  }
  &--green {
    @include cta-color(accent-green);
  }
  &--pink {
    @include cta-color(accent-pink);
  }
  &--blue {
    @include cta-color(accent-blue);
  }
}

// Canvas/Showcase
.canvas {
  padding: 1px;
  margin: -1px space(xs) 0;
  position: relative;
  @include flex(column, center, center);
  width: 100%;
  aspect-ratio: 16 / 9;
  height: auto;
  border-radius: $radius;
  @include bg-cover;
  overflow: hidden;
  text-decoration: none;
  cursor: pointer;
  @include transition(all);
  contain: layout style;

  &:hover,
  &:focus-visible {
    text-decoration: none;
  }
  &:focus-visible {
    @include focus-visible;
  }

  &::after {
    content: "";
    position: absolute;
    inset: 0;
    background-color: color(bg);
    opacity: 0;
    @include transition(opacity);
  }

  &:hover::after,
  &:focus-visible::after {
    opacity: 0.1;
  }

  &:hover,
  &:focus-visible {
    .action-button {
      background-color: color(bg-translucent);
      border-color: color(text);
    }
  }

  > div {
    backface-visibility: hidden;
    transform: translateZ(0);
  }
}

.project-image {
  @include flex(column, center, center);
  width: 100%;
  height: 100%;
  padding: 0;
  position: relative;
  z-index: 1;

  &__inner {
    width: auto;
    max-width: 90%;
    max-height: 90%;
    border-radius: $radius;
    overflow: hidden;
    img {
      width: 100%;
      height: auto;
      object-fit: contain;
    }
  }
}

.action-button {
  padding: calc(space(xs) + 2px) calc(space(sm) + 2px);
  margin: -2px;
  box-sizing: content-box;
  position: absolute;
  bottom: space(md);
  right: space(md);
  display: inline-flex;
  align-items: center;
  background-color: color(bg-transparent);
  color: color(text);
  border: 0.0625rem solid transparent;
  border-radius: $radius;
  -webkit-backdrop-filter: blur(0.3125rem);
  backdrop-filter: blur(0.3125rem);
  @include transition(all);
  z-index: 2;

  &__text {
    margin: 0;
    font-size: $font-size-small;
    color: color(text);
    white-space: nowrap;
  }
}

// Footer
footer {
  @include flex(column, flex-end, center);
  width: 100%;
  min-height: 45rem;
  background-image: url(/assets/footer-cover.jpg);
  @include bg-cover;

  > div {
    @include flex(row, space-between, center);
    width: 100%;
    max-width: $container-width;
  }

  .small-padding {
    padding: 0 0 space(md);
  }
  .large-padding {
    padding: 0 0 space(2xl);
  }

  .signature p {
    color: color(text-muted);
    font-size: $font-size-small;
    line-height: 1;
    letter-spacing: -0.00625rem;
    margin-bottom: 0;
  }

  svg {
    width: space(lg);
    height: auto;
  }
}

.signature__icon {
  width: 1.625rem;
  height: 2.75rem;
}

//
// SPECIFIC COMPONENTS
// Unique UI components with complex interactions
// ----------------------------------

// Slideframe Component
.slideframe {
  position: fixed !important;
  z-index: 99999 !important;
  pointer-events: none !important;

  &--visible {
    pointer-events: auto !important;

    .slideframe-generalclose {
      visibility: visible !important;
      opacity: 1 !important;
      pointer-events: auto !important;
    }

    .slideframe-container {
      right: 0 !important;
    }
  }

  &-generalclose {
    display: block !important;
    position: fixed !important;
    inset: 0 !important;
    background: rgba(0, 0, 0, 0.25) !important;
    pointer-events: none !important;
    visibility: hidden !important;
    opacity: 0 !important;
    transition: all 0.1s ease-out !important;
    z-index: 99998 !important;
  }

  &-container {
    width: 95% !important;
    height: 100% !important;
    position: fixed !important;
    top: 0 !important;
    bottom: 0 !important;
    right: -100% !important;
    transition: right 0.6s cubic-bezier(0.075, 0.82, 0.165, 1) !important;
    box-shadow: rgba(0, 0, 0, 0.4) 0px 0px 4px 0px !important;
    z-index: 99999 !important;

    &-titlebar {
      min-height: calc(space(xl) + space(xs)) !important;
      line-height: calc(space(xl) + space(xs)) !important;
      background: color(accent-pink) !important;
      color: color(bg) !important;
      -webkit-font-smoothing: antialiased !important;
      display: flex !important;
      font-family: $font-base !important;
      font-size: $font-size-base !important;
      font-weight: bold !important;
      padding: space(sm) !important;

      strong {
        font-weight: normal !important;
        color: inherit !important;
        font: inherit !important;
      }
    }

    &-frame {
      border: none !important;
      width: 100% !important;
      height: calc(100% - (space(xl) + space(xs))) !important;
      background: color(bg) !important;
    }

    &-titlebar-title {
      flex-grow: 1 !important;
      text-align: center !important;
      padding: 0 space(md) !important;
      white-space: nowrap !important;
      overflow: hidden !important;
      text-overflow: ellipsis !important;

      &:before {
        content: "\25CF";
        position: absolute !important;
        margin-left: calc(space(lg) * -1.17) !important;
        animation: sl-circle infinite 0.8s !important;
        opacity: 0 !important;
        transition: opacity 0.4s !important;
      }
    }
  }
}

.slideframe-body {
  &--noscroll {
    overflow: hidden !important;
  }

  &--loading * {
    cursor: wait !important;

    .slideframe-container-titlebar-title:before {
      opacity: 1 !important;
      transform-origin: 50% 50% !important;
    }
  }
}

.slideframe-btn,
.slideframe-btn:hover {
  appearance: none !important;
  display: block !important;
  flex-shrink: 0 !important;
  height: 100% !important;
  font-size: space(lg) !important;
  font-family: inherit !important;
  color: inherit !important;
  width: calc(space(xl) + space(xs)) !important;
  background: none !important;
  border: none !important;
  text-align: center !important;
  text-decoration: none !important;
  cursor: pointer !important;
  border-radius: 0px !important;
  line-height: inherit !important;
}

// Expandable Content
.expandable {
  margin-bottom: space(md);
  width: 100%;
  overflow: hidden; // Contain the animation overflow

  summary {
    list-style: none;
    cursor: n-resize;
    &::-webkit-details-marker {
      display: none;
    }
    
    &:focus-visible {
      outline: transparent;
    } ;
  }

  .summary-content {
    padding: 0;
    position: relative;
    .section {
      margin-bottom: 0;
    }
  }

  %horizontal-line {
    position: relative;
    display: flex;
    align-items: center;
    margin-top: space(md);

    &::before {
      content: "";
      flex-grow: 1;
      height: 1px;
      background-color: color(text-muted);
      opacity: 0.3;
      margin-right: space(md);
    }
  }

  %indicator {
    font-size: $font-size-small;
    color: color(text-subtle);
    display: inline-flex;
    align-items: center;

    &:hover {
      color: color(text);
    }

    &::after {
      content: "";
      display: inline-block;
      width: 0.5rem;
      height: 0.5rem;
      border-right: 1px solid currentColor;
      border-bottom: 1px solid currentColor;
      margin-left: space(sm);
    }
  }

  .expand-wrapper {
    @extend %horizontal-line;
    cursor: pointer; // Explicitly add pointer cursor here
    margin: space(xs);
  }

  .expand-indicator {
    @extend %indicator;
    &::after {
      transform: rotate(45deg);
    }
  }

  .details-content {
    padding: 0;
    overflow: hidden;
    transition: height 300ms ease-out;
    height: 0;
    .section {
      margin-top: 0;
    }
  }

  &[open] {
    .summary-content .expand-wrapper {
      display: none;
    }
    .details-content {
      height: auto;
    } // Will be set dynamically by JS
  }

  .content-wrapper {
    margin-bottom: space(xs);
  }

  .toggle-wrapper {
    @extend %horizontal-line;
    cursor: pointer; // Explicitly add pointer cursor here
    margin: space(xs);
  }

  .collapse-indicator {
    @extend %indicator;
    &::after {
      transform: rotate(-135deg);
    }
  }

  // For the polyfill fallback
  .no-details & {
    .details-content {
      display: none;
      height: 0;
    }
    &.open .details-content {
      display: block;
      height: auto; // Will be set dynamically by JS
    }
  }
}

//
// RESPONSIVE UTILITIES
// Media queries and responsive adjustments
// ----------------------------------
@include responsive(md) {
  .nav-links {
    gap: space(md);
  }
  .wrapper {
    padding-inline: space(md);
    gap: space(md);
  }
  .main {
    gap: space(md);
  }
  .expandable {
    .toggle-wrapper,
    .expand-wrapper {
      margin-top: space(sm);
    }
  }
}

@include responsive(sm) {
  .nav-links {
    gap: space(sm);
  }
  .wrapper {
    padding-block: space(xl);
  }
  .action-button {
    bottom: space(sm);
    right: space(sm);
  }
  section {
    gap: 0.125rem;
  }
  .canvas {
    aspect-ratio: 4 / 3;
  }
}

@media (max-width: 500px) {
  .slideframe-container {
    width: 100% !important;
  }
}

@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    scroll-behavior: auto !important;
    transition: none !important;
  }
}

//
// PRINT STYLES
// Styles for print media
// ----------------------------------
@media print {
  body {
    background: #fff;
    color: #000;
  }
  .wrapper {
    max-width: 100%;
    padding: 1cm;
  }
  .nav-links,
  .action-button,
  footer {
    display: none;
  }
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    color: #000;
    page-break-after: avoid;
  }
  p {
    color: #333;
  }
  a {
    text-decoration: underline;
    color: #000;
  }
  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3;
  }
}

//
// FONT DECLARATION
// Web font imports
// ----------------------------------
@font-face {
  font-family: "Inter Variable";
  src: url("/fonts/InterVariable.woff2") format("woff2");
  font-weight: 100 900;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: "Inter Variable";
  src: url("/fonts/InterVariable-Italic.woff2") format("woff2");
  font-weight: 100 900;
  font-style: italic;
  font-display: swap;
}
