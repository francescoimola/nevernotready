@use 'sass:map';

/*!
 * Main Stylesheet
 * Author: Francesco Imola
 */

// --- VARIABLES & MAPS ---
$perfect-fourth: 1.333;
$unit: 0.25rem;
$font-base: 'Inter Variable', -apple-system, BlinkMacSystemFont, 'Segoe UI',
  Roboto, sans-serif;

$colors: (
  bg: #f6f6f6,
  text: #061308,
  text-subtle: color-mix(in srgb, #061308 80%, #f6f6f6),
  text-faint: color-mix(in srgb, #061308 70%, #f6f6f6),
  links: hsl(129, 100%, 19%),
  links-subtle: hsl(129, 40%, 66%),
  bg-translucent: color-mix(in srgb, #f6f6f6 95%, #061308),
  bg-more-translucent: color-mix(in srgb, #f6f6f6 85%, #061308),
  border: color-mix(in srgb, #f6f6f6 70%, #061308),
);

$spacing: (
  xs: $unit,
  sm: $unit * 2,
  md: $unit * 4,
  lg: $unit * 6,
  xl: $unit * 10,
  2xl: $unit * 16,
);

$breakpoints: (
  md: 820px,
  sm: 480px,
);

$font-sizes: (
  base: 1rem,
  small: 1rem * 0.85,
  large: 1rem * $perfect-fourth,
  xl: 1rem * $perfect-fourth * $perfect-fourth,
  clamp: clamp(1rem, calc(0.4783rem + 1.7391vw), 1rem),
);

$line-heights: (
  base: 1 + calc($perfect-fourth / 2),
  tight: 1 + calc($perfect-fourth / 3),
);

$container-width: 58ch;
$border-width: calc($unit / 4) * $perfect-fourth; // 0.333rem
$ext-icon-size: map.get($spacing, sm) + map.get($spacing, xs);

// --- MIXINS ---
@mixin flex-col($gap: null) {
  display: flex;
  flex-direction: column;
  @if $gap {
    gap: $gap;
  }
}

@mixin flex-row($gap: null) {
  display: flex;
  flex-direction: row;
  @if $gap {
    gap: $gap;
  }
}

// --- RESET & BASE ---
*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html {
  font-size: 100%;
  scroll-behavior: smooth;
  -webkit-text-size-adjust: 100%;
  height: 100%;
}

body {
  min-height: 100%;
  line-height: map.get($line-heights, base);
  font-family: $font-base;
  font-size: map.get($font-sizes, clamp);
  font-weight: 400;
  -webkit-font-smoothing: antialiased;
  font-feature-settings: 'ss01' 1, 'ss03' 1;
  font-optical-sizing: auto;
  color: map.get($colors, text);
  background-color: map.get($colors, bg);
  overflow-x: hidden;

  & *:focus-visible {
    outline: $border-width solid map.get($colors, text);
    outline-offset: $border-width;
  }
}

main {
  padding-bottom: map.get($spacing, xl);
}

svg,
img {
  display: block;
  max-width: 100%;
  height: auto;
  fill: map.get($colors, text);

  &.give-border {
    border: $border-width solid map.get($colors, border);
    border-radius: map.get($spacing, xs);
  }
}

img {
  & .white-bkg {
    background-color: map.get($colors, bg);
  }
}

figure {
  @include flex-col(map.get($spacing, xs));
  width: 100%;

  figcaption {
    margin-top: map.get($spacing, sm);
    font-size: map.get($font-sizes, small);
  }
}

details > summary h2 {
  display: inline;
}
details > summary {
  gap: map.get($spacing, lg);
}

h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0 0 map.get($spacing, sm) 0;
  font-weight: 600;
  font-size: map.get($font-sizes, large);
  line-height: map.get($line-heights, tight);
  color: map.get($colors, text);
  text-rendering: optimizeLegibility;
}

h2 {
  padding-top: map.get($spacing, md);
}
h3 {
  font-size: map.get($font-sizes, base);
  line-height: map.get($line-heights, base);
}

p {
  margin: 0 0 map.get($spacing, sm) 0;
  color: map.get($colors, text-subtle);
  text-rendering: optimizeSpeed;
  &:last-child {
    margin-bottom: 0;
  }
}

a {
  color: currentColor;
  text-decoration: underline;
  text-underline-offset: map.get($spacing, xs);
  transition: all 50ms ease-in-out;
  &:focus {
    outline: auto;
  }
  h2 {
    color: inherit;
  }
}

small {
  font-size: map.get($font-sizes, small);
  color: map.get($colors, text-subtle);
}

ul {
  list-style-type: disc;
  margin-left: map.get($spacing, md);
  color: map.get($colors, text-subtle);
  margin-block-start: 0;
  margin-block-end: 0;
  padding-inline-start: 0;
  li:last-child {
    margin-bottom: map.get($spacing, sm);
  }
}

i {
  font-style: italic;
}
b {
  font-weight: 600;
}
li {
  margin: 0 !important;
  display: inline-block;
}

.light {
  @extend h2;
  color: map.get($colors, text-faint);
}

// --- FONTS ---
@font-face {
  font-family: 'Inter Variable';
  src: url('/fonts/InterVariable.woff2') format('woff2 supports variations'),
    url('/fonts/InterVariable.woff2') format('woff2-variations');
  font-weight: 100 900;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: 'Inter Variable';
  src: url('/fonts/InterVariable-Italic.woff2')
      format('woff2 supports variations'),
    url('/fonts/InterVariable-Italic.woff2') format('woff2-variations');
  font-weight: 100 900;
  font-style: italic;
  font-display: swap;
}

// --- LAYOUT ---
main,
.g-wrapper {
  @include flex-col();
  justify-content: center;
  align-content: center;
  flex-wrap: wrap;
  width: 100%;
}

.center {
  margin: 0 auto;
  padding: 0 clamp(0rem, 1rem - 1vw, 2rem);
}
.pad-top {
  padding-top: map.get($spacing, md);
}
.pad-sides {
  padding: 0 map.get($spacing, md);
}
.pad-bottom {
  padding-bottom: map.get($spacing, 2xl);
}
.max-width {
  max-width: $container-width;
}
.projects-showcase {
  background-color: map.get($colors, bg-translucent);
  padding-top: map.get($spacing, xl);
  img {
    border-radius: map.get($spacing, xs);
    background-color: map.get($colors, bg);
    border: $border-width solid map.get($colors, border);
  }

  section {
    margin-top: map.get($spacing, lg);
    @include flex-row(map.get($spacing, lg));
    flex-wrap: wrap;
    row-gap: map.get($spacing, 2xl);
    > * {
      flex: 1 1 25%;
    }
  }
}

section {
  @include flex-col();
  justify-content: flex-start;
  align-content: start;
  flex-wrap: nowrap;
  width: 100%;
}

.whatyouget {
  h2,
  div {
    margin-bottom: map.get($spacing, lg);
  }
  div:last-of-type {
    margin-bottom: 0;
  }
  h3 {
    color: map.get($colors, text-subtle);
    margin-bottom: map.get($spacing, sm);
  }
}

.testimonials {
  @include flex-col(map.get($spacing, sm));
  .quote {
    width: 100%;
    background-color: map.get($colors, bg-translucent);
    border: $border-width solid map.get($colors, border);
    border-radius: map.get($spacing, xs);
    @include flex-col();
    justify-content: space-between;
    flex-wrap: nowrap;
    align-items: stretch;
    padding: map.get($spacing, lg);

    > div {
      @include flex-row(map.get($spacing, md));
      margin-top: map.get($spacing, md);

      svg {
        display: block;
        width: auto;
        height: 100%;
        flex: 1 1 10%;
        border: $border-width solid map.get($colors, border);
        border-radius: map.get($spacing, xs);
      }

      .credit {
        @include flex-col(map.get($spacing, xs));
        flex: 1 1 100%;
        justify-content: flex-start;
        align-content: start;
        flex-wrap: nowrap;
      }
    }
  }
}

.image-container {
  position: relative;
  display: block;
  img {
    display: block;
    width: 100%;
    height: auto;
  }
  .overlay-text {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: map.get($colors, links);
    color: map.get($colors, bg);
    @include flex-col();
    justify-content: center;
    align-items: center;
    text-align: center;
    opacity: 0;
    transition: opacity 0.2s ease-in-out;
    z-index: 1;
  }
}

.faq {
  h2 {
    @extend .light;
  }

  ul li {
    display: revert;
    &:not(:last-child) {
      padding-bottom: map.get($spacing, sm);
    }
  }
}

// --- COMPONENTS ---
header {
  width: 100%;
  @include flex-row(map.get($spacing, md));
  flex-wrap: wrap;
  justify-content: space-between;

  > div span {
    display: block;
    margin-top: map.get($spacing, sm);
    color: map.get($colors, text-faint);
  }
  a {
    display: block;
    svg {
      width: calc(map.get($spacing, 2xl) * 6);
      height: auto;
      fill: map.get($colors, links);
    }
  }
  nav ul {
    margin: 0;
    list-style-type: none;
    @include flex-col(map.get($spacing, xs));
    color: map.get($colors, text-subtle);
    padding: 0;

    a.active {
      font-weight: 600;
      text-decoration: underline;
      text-decoration-style: wavy;
    }
  }
}

.work {
  font-size: map.get($font-sizes, small);
  @include flex-col(map.get($spacing, xs));
  flex-wrap: wrap;
  .role {
    color: map.get($colors, text-subtle);
  }
  figure figcaption {
    font-weight: 600;
  }
}

.button {
  display: inline-flex;
  width: max-content;
  padding-right: 5px;
  justify-content: center;
  border: $border-width solid transparent;
  &::after {
    content: '\00a0 â†—';
    width: $ext-icon-size;
    height: $ext-icon-size;
    position: static;
    right: map.get($spacing, xs);
    top: calc(map.get($spacing, xs) / $perfect-fourth);
  }
}

ul.plain-list {
  @extend section;
  gap: map.get($spacing, xs);
  color: map.get($colors, text-subtle);
  list-style-type: none;
  margin-left: 0;
}

.text-on-img-wrapper {
  display: inline-block;
  overflow: hidden;
  position: relative;
  width: 100%;
  @include flex-col();
  justify-content: center;
  align-items: center;
  height: max-content;
  min-height: 100vh;
  padding: calc(map.get($spacing, 2xl)) 0;

  >img {
    pointer-events: none;
    position: absolute;
    object-fit: cover;
    object-position: 0% 5%;
    width: 100%;
    height: 100%;
    z-index: -1;
    filter: blur(0.2px) brightness(60%) saturate(130%);
  }

  > div > h2 {
    position: relative;
    color: map.get($colors, bg);
  }
}

// Message section
.imessage {
  position: relative;
  background-color: map.get($colors, bg-translucent);
  border-radius: map.get($spacing, xs);
  display: flex;
  flex-direction: column;
  padding: map.get($spacing, xl);
  border: $border-width solid map.get($colors, border);

  & p {
    line-height: map.get($line-heights, tight);
    max-width: 75%;
    padding: map.get($spacing, sm) map.get($spacing, md);
    position: relative;
    word-wrap: break-word;
    margin: 0.5rem 0;
    width: fit-content;
    border: $border-width solid map.get($colors, border);

    &.from-me {
      border-radius: map.get($spacing, sm) map.get($spacing, sm) 0
        map.get($spacing, sm);
      align-self: flex-end;
      background-color: map.get($colors, links);
      color: map.get($colors, bg);
    }

    &.from-them {
      border-radius: map.get($spacing, sm) map.get($spacing, sm)
        map.get($spacing, sm) 0;
      align-items: flex-start;
      background-color: map.get($colors, bg);
      color: map.get($colors, text);
      margin: 0.5rem 0;
    }
  }
}

// Footer
footer {
  display: inline-block;
  overflow: hidden;
  position: relative;
  width: 100%;
  min-height: fit-content;
  height: clamp(33rem, 100vh, 101vh);
  display: flex;
  flex-direction: column;
  align-items: stretch;
  justify-content: space-between;
  gap: map.get($spacing, 2xl);

  >img {
    pointer-events: none;
    position: absolute;
    object-fit: cover;
    object-position: 0% 33%;
    width: 100%;
    height: 100%;
    z-index: -1;
    filter: blur(0.5px) brightness(50%) saturate(133%) sepia(0.2);
  }

  h2,
    p,
    a, span {
      color: map.get($colors, bg-translucent);
      margin: map.get($spacing, xs) 0 0 0;
      font-size: map.get($font-sizes, base);
    }

  .logo {
      fill: map.get($colors, bg);
      mix-blend-mode:overlay;
    }

  .footer-content {
    width: 100%;
    @include flex-col(map.get($spacing, sm));
    justify-content: flex-start;
    align-items: stretch;
    gap: map.get($spacing, xl);
    color: map.get($colors, bg-translucent);

    .f-innergroup {
      @include flex-col(map.get($spacing, sm));
      justify-content: flex-start;
      align-items: stretch;
      gap: map.get($spacing, xs);

      h2,
      a {
        margin: 0;
        padding: 0;
      }
    }
  }
}

// --- SLIDEFRAME ---
.slideframe {
  position: fixed !important;
  z-index: 99999 !important;
  pointer-events: none !important;

  &--visible {
    pointer-events: auto !important;

    .slideframe-generalclose {
      visibility: visible !important;
      opacity: 1 !important;
      pointer-events: auto !important;
    }

    .slideframe-container {
      right: 0 !important;
    }
  }

  &-generalclose {
    display: block !important;
    position: fixed !important;
    inset: 0 !important;
    background: rgba(0, 0, 0, 0.25) !important;
    pointer-events: none !important;
    visibility: hidden !important;
    opacity: 0 !important;
    transition: all 0.1s ease-out !important;
    z-index: 99998 !important;
  }

  &-container {
    width: 95% !important;
    height: 100% !important;
    position: fixed !important;
    top: 0 !important;
    bottom: 0 !important;
    right: -100% !important;
    transition: right 0.6s cubic-bezier(0.075, 0.82, 0.165, 1) !important;
    border: $border-width solid map.get($colors, border);
    z-index: 99999 !important;

    &-titlebar {
      min-height: map.get($spacing, xl) !important;
      line-height: map.get($spacing, xl) !important;
      background: map.get($colors, bg) !important;
      color: map.get($colors, text) !important;
      -webkit-font-smoothing: antialiased !important;
      display: flex !important;
      font-family: $font-base !important;
      font-size: map.get($font-sizes, base) !important;
      font-weight: bold !important;
      padding: map.get($spacing, sm) !important;

      strong {
        font-weight: normal !important;
        color: inherit !important;
        font: inherit !important;
      }
    }

    &-frame {
      border: none !important;
      width: 100% !important;
      height: calc(100% - map.get($spacing, xl)) !important;
      background: map.get($colors, bg) !important;
    }

    &-titlebar-title {
      flex-grow: 1 !important;
      text-align: center !important;
      padding: 0 map.get($spacing, md) !important;
      white-space: nowrap !important;
      overflow: hidden !important;
      text-overflow: ellipsis !important;

      &:before {
        content: '\25CF';
        position: absolute !important;
        margin-left: calc(map.get($spacing, lg) * -1) !important;
        animation: sl-circle infinite 0.8s !important;
        opacity: 0 !important;
        transition: opacity 0.4s !important;
      }
    }
  }
}

.slideframe-body {
  &--noscroll {
    overflow: hidden !important;
  }

  &--loading * {
    cursor: wait !important;

    .slideframe-container-titlebar-title:before {
      opacity: 1 !important;
      transform-origin: 50% 50% !important;
    }
  }
}

.slideframe-btn,
.slideframe-btn:hover {
  appearance: none !important;
  display: block !important;
  flex-shrink: 0 !important;
  height: 100% !important;
  font-size: map.get($spacing, lg) !important;
  font-family: inherit !important;
  color: inherit !important;
  width: map.get($spacing, xl) !important;
  background: none !important;
  border: none !important;
  text-align: center !important;
  text-decoration: none !important;
  cursor: pointer !important;
  line-height: inherit !important;
}

// --- UTILITIES ---
p + .button {
  margin-top: map.get($spacing, sm);
}
.button + small {
  margin-top: map.get($spacing, sm);
}

// --- RESPONSIVE ---
@media only screen and (max-width: map.get($breakpoints, md)) {
  .work {
    margin-bottom: map.get($spacing, lg);
  }

  .projects-showcase section {
    > * {
      flex: 1 1 40%;
    }
  }
}

@media only screen and (max-width: map.get($breakpoints, sm)) {
  .slideframe-container {
    width: 100% !important;
  }
  .button + small {
    max-width: 95%;
  }

  .projects-showcase section {
    > * {
      flex: 1 1 100%;
    }
  }

  .pad-sides {
    padding: 0 map.get($spacing, md);
  }
}

@media (hover: hover) and (pointer: fine) {
  a:hover, a.active:hover, a.active:focus-visible,
  a:focus-visible {
    text-decoration: underline;
    text-decoration-style: wavy;
    color: map.get($colors, links);
  }

  footer a:hover,
  footer a:focus-visible {
    color: currentColor;
  }
}
