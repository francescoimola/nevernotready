@use 'sass:map';
@use 'variables' as *;

// ===================================
// LAYOUT & STRUCTURE
// ===================================
// Layout + Header + Footer

// ===================================
// Media
// ===================================

svg,
img {
  display: block;
  max-width: 100%;
  height: auto;
  fill: map.get($colors, text);
  image-rendering: webkit-optimize-contrast;
  image-rendering: crisp-edges;
}

.logo {
  height: clamp(1.618rem, 3vw, 2.617rem);
  width: auto;
  max-width: revert;
}

figure {
  @include flex(column, map.get($spacing, sm));
  width: 100%;

  figcaption {
    margin-top: calc(map.get($spacing, sm) + $border-width);
  }
}

details>summary {
  gap: map.get($spacing, lg);

  h2 {
    display: inline;
  }
}

// ===================================
// LAYOUT
// ===================================

main {
  @include flex;
  justify-content: flex-start;
  align-content: start;
  flex-wrap: nowrap;
  width: 100%;
  position: relative;
  z-index: 1;

  &::before {
    content: '';
    position: fixed;
    left: clamp(0.25rem, 2vw, $base-rem);
    top: 0;
    height: 100vh;
    border-left: $border-width dotted map.get($colors, text-more-subtle);
    z-index: -1;
  }

  &::after {
    content: '';
    position: absolute;
    top: 0;
    left: calc(-1 * clamp(0.25rem, 2vw, $base-rem));
    width: 100vw;
    border-top: $border-width dotted map.get($colors, text-more-subtle);
    pointer-events: none;
  }
}

.margin-fix {
  padding-right: map.get($spacing, sm);
  position: relative;
}

section {
  position: relative;
}

.home-card {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: flex-start;
  width: 100%;
  text-decoration: none;
  padding: map.get($spacing, md);
  background: map.get($colors, bg);
  border: $border-width solid map.get($colors, text-subtle);
  border-radius: map.get($spacing, xs);

  &:hover,
  &:focus-visible {
    background: map.get($colors, links);

    &,
    * {
      color: map.get($colors, bg);
    }
  }

  >p {
    width: 100%;
    color: map.get($colors, text-subtle);
  }
}

.pad-top-md {
  margin-top: map.get($spacing, md);
}

.pad-top-sm {
  margin-top: map.get($spacing, sm);
}

.pad-top-lg {
  margin-top: map.get($spacing, lg);
}

.pad-bottom {
  margin-bottom: map.get($spacing, 2xl);
}

.pad-bottom-large {
  margin-bottom: calc(map.get($spacing, xl) * 4);
}

.top-divider {
  border-top: $border-width dotted map.get($colors, text-subtle);
}

.intro-wrapper {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: start;

  img {
    width: clamp(10rem, 10vw, 15rem);
    height: auto;
  }
}

.page-margins {
  margin: map.get($spacing, sm) 0 0 clamp(0.25rem, 2vw, $base-rem);
  padding: map.get($spacing, sm) clamp(0.5rem, 4vw, 2rem) map.get($spacing, md) clamp(0.25rem, 2vw, $base-rem);
}

// ===================================
// HEADER
// ===================================

header {
  padding-inline: clamp(0.25rem, 2vw, $base-rem);
  padding-block: clamp(0.5rem, 1.25vh, $base-rem);
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  flex-wrap: wrap;
  column-gap: map.get($spacing, xl);
  position: fixed;
  bottom: 0;
  left: 0;
  z-index: 999;
  width: 100%;
  background: map.get($colors, bg);
  border-top: $border-width solid map.get($colors, text-more-subtle);

  // Fixed height on mobile for predictable positioning
  @media only screen and (max-width: map.get($breakpoints, md)) {
    height: $header-height;
    padding-block: 0;
  }
}

nav {
  margin: 0;
  width: 100%;
  @include flex(row, 0);
  justify-content: space-between;
  align-items: center;

  *{
    white-space: nowrap;
  }

  .logo-plus-nav {
    @include flex(row, map.get($spacing, lg));
    justify-content: flex-start;
    align-items: center;
    width: 100%;

    @media only screen and (max-width: map.get($breakpoints, md)) {
      justify-content: space-between;
    }
  }

  .home-icon {
    width: map.get($spacing, md);
    height: auto;
    padding-top: map.get($spacing, xs);
  }

  .nav-links {
    justify-content: center;
    align-items: center;
    @include flex(row, map.get($spacing, sm));
    flex-wrap: nowrap;

    *:not(:last-child)::after {
      content: ",";
      text-decoration: none;
      display: inline-block;
    }
  }

  // Mobile menu hidden by default
  .mobile-menu {
    display: none;
  }

  // Show desktop nav by default
  .desktop-nav {
    display: flex;
  }

  // Mobile breakpoint
  @media only screen and (max-width: map.get($breakpoints, md)) {
    .desktop-nav {
      display: none;
    }

    .mobile-menu {
      display: block;
      position: relative;
    }

    .home-icon {
        display: none;
        visibility: hidden;
      }
  }
}

// ===================================
// MOBILE MENU COMPONENTS
// ===================================

.mobile-menu {
  summary {
    list-style: none;
    cursor: pointer;
    user-select: none;
    -webkit-tap-highlight-color: transparent;

    &::-webkit-details-marker {
      display: none;
    }
  }

  .hamburger {
    @include flex(column, calc(map.get($spacing, xs) / $perfect-fourth));
    justify-content: center;
    width: map.get($spacing, lg);
    height: map.get($spacing, lg);
    cursor: pointer;

    span {
      display: block;
      width: 100%;
      height: 2px;
      background: map.get($colors, text);
      will-change: transform, opacity;
    }
  }

  &[open] .hamburger {
    span:first-child {
      transform: translateY(calc(map.get($spacing, xs) / $golden-ratio + 3px)) rotate(45deg);
    }

    span:nth-child(2) {
      opacity: 0;
    }

    span:last-child {
      transform: translateY(calc(-1 * (map.get($spacing, xs) / 2 + 1px))) rotate(-45deg);
    }
  }

  .mobile-menu-panel {
    position: fixed;
    left: 0;
    right: 0;
    bottom: $header-height;
    background: map.get($colors, bg);
    border-top: $border-width solid map.get($colors, text-more-subtle);
    padding: map.get($spacing, md) map.get($spacing, md) map.get($spacing, xl) map.get($spacing, md);
    overflow: hidden;
    @include flex(row, map.get($spacing, md));
    justify-content: space-between;
    align-items: flex-start;

    .mobile-menu-links {
      @include flex(column, map.get($spacing, sm));
      justify-content: flex-start;
      align-items: flex-start;
    }
  }
}

.secondary-header {
  width: 100%;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: start;
  gap: map.get($spacing, xl);
  flex-wrap: wrap;
  position: relative;

  @media only screen and (max-width: map.get($breakpoints, md)) {
    margin-bottom: map.get($spacing, xl);
  }
}

.secondary-links {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: flex-end;
  margin-top: map.get($spacing, xs);
  gap: map.get($spacing, sm);

  @media only screen and (max-width: calc(map.get($breakpoints, md)*1.333)) {
    display: none;
    visibility: hidden;
  }
}

.separate-below {
  padding-bottom: map.get($spacing, md);
  position: relative;

  &::after {
    content: '';
    position: absolute;
    left: calc(map.get($spacing, 2xl)* -1);
    bottom: 0;
    width: 150vw;
    border-bottom: $border-width dotted map.get($colors, text-more-subtle);
  }
}

.separate-above {
  padding-top: map.get($spacing, md);
  position: relative;

  &::before {
    content: '';
    position: absolute;
    left: calc(map.get($spacing, 2xl)* -1);
    top: 0;
    width: 150vw;
    border-top: $border-width dotted map.get($colors, text-more-subtle);
  }
}

// ===================================
// FOOTER
// ===================================

footer {
  border-top: $border-width solid map.get($colors, links);
  padding: map.get($spacing, 2xl) clamp(0.5rem, 4vw, 2rem);
  @include flex(column, map.get($spacing, xl));
  justify-content: space-between;
  align-items: start;
  background: map.get($colors, links);
  position: relative;
  z-index: 2;
  color: map.get($colors, bg);

  a {
    color: map.get($colors, bg-more-translucent);
    &:hover {
    color: map.get($colors, links-subtle);
    text-decoration-color: map.get($colors, bg-more-translucent);
  }
  }

  * {
    color: map.get($colors, bg);
  }

  .footer-grid {
    display: flex;
    flex-wrap: wrap;
    gap: map.get($spacing, xl);
    width: 100%;
  }

  .f-group {
    @include flex(column, map.get($spacing, xs));
    min-width: min(100%, 15ch);
    flex: 1 1 15ch;

    .f-heading {
      font-weight: 500;
      margin-bottom: map.get($spacing, xs);
    }

    nav {
      @include flex(column, map.get($spacing, xs));
      align-items: flex-start;
    }
  }

  .f-copyright {
    margin-top: map.get($spacing, sm);
    padding: map.get($spacing, md) 0 map.get($spacing, xl);
    border-top: $border-width dotted map.get($colors, bg-more-translucent);
    width: 100%;
  }
}