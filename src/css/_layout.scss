@use 'sass:map';
@use 'variables' as *;

// ===================================
// LAYOUT & STRUCTURE
// ===================================
// Layout + Header + Footer

// ===================================
// Media
// ===================================

svg,
img {
  display: block;
  max-width: 100%;
  height: auto;
  fill: map.get($colors, text);
  image-rendering: webkit-optimize-contrast;
  image-rendering: crisp-edges;
  opacity: $opacity-fix;

  &.give-border {
    border: $border-width solid map.get($colors, text-faint);
    border-radius: map.get($spacing, xs);
  }
}

img.hero {
  min-width: calc(map.get($spacing, 2xl) * $icon-scale);
  max-width: 25vw;
  margin: 0 auto;
  object-fit: contain;
}

figure {
  @include flex(column, map.get($spacing, xs));
  width: 100%;

  figcaption {
    margin-top: calc(map.get($spacing, sm) + $border-width);
  }
}

details>summary {
  gap: map.get($spacing, lg);

  h2 {
    display: inline;
  }
}

.ascii-art {
  font-family: monospace;
  color: currentColor;
  white-space: pre;
  overflow-x: auto;
  padding-block: map.get($spacing, lg);

  @media (max-width: map.get($breakpoints, sm)) {
    font-size: calc($font-base * 0.75);
  }
}

// ===================================
// LAYOUT
// ===================================

main,
section {
  @include flex;
  justify-content: flex-start;
  align-content: start;
  flex-wrap: nowrap;
  max-width: $container-width;

  @media only screen and (max-width: map.get($breakpoints, md)) {
    margin-top: map.get($spacing, md);
  }
}

.split-screen {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  width: 100%;
  padding-inline: clamp(0.5rem, 4vw, 2rem);
  box-sizing: border-box;
  align-items: flex-start;

  >* {
    min-width: 0;
  }

  header {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    height: 100%;
    position: sticky;
    top: 0;
    left: 0;

    &.cap-height {
      height: calc(100vh - (map.get($spacing, md)) * 2);
      width: 100%;
    }

    h1 {
      max-width: calc($container-width / 2);
      margin: 0;
    }
  }

  .page-content {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: flex-start;
    width: 100%;
    gap: map.get($spacing, md);

    @media only screen and (min-width: map.get($breakpoints, md)) {
      height: 100%;
    }

    @media only screen and (max-width: map.get($breakpoints, md)) {
      padding-bottom: map.get($spacing, md);
      height: 100%;
    }
  }

  .card-button {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: flex-start;
    width: 100%;
    height: 100%;
    text-decoration: none;
    padding: map.get($spacing, md);
    background: map.get($colors, bg);
    border: $border-width solid map.get($colors, text-faint);
    border-radius: map.get($spacing, xs);
    transition: all $transition-speed ease-in-out;

    * {
      transition: all $transition-speed ease-in-out;
    }

    &:hover,
    &:focus-visible {
      background: map.get($colors, links);

      &,
      * {
        color: map.get($colors, bg);
      }
    }

    > p {
      width: 100%;
      color: map.get($colors, text-subtle);
    }
  }

  b {
    font-weight: 600;
  }

  @media only screen and (max-width: map.get($breakpoints, md)) {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: flex-start;
    gap: 0;
  }
}

.main-wrapper, .page-content {
  width: 100%;
  justify-items: end;
}

.wayfinding-wrapper {
  gap: map.get($spacing, sm);

  a {
    font-weight: 600;
  }
}

.nav-mobile {
  display: none;
}

.pad-top {
  padding-top: map.get($spacing, md);
}

.pad-bottom {
  padding-bottom: map.get($spacing, 2xl);
}

body.split-screen {
  padding-block: map.get($spacing, md);

  @media only screen and (max-width: map.get($breakpoints, md)) {
    justify-content: flex-start;
    padding-block: map.get($spacing, md);
  }
}

.top-divider {
  border-top: $border-width solid map.get($colors, text-subtle);
}

// ===================================
// HEADER
// ===================================

nav ul {
  @include flex(row, map.get($spacing, md));
  margin: 0;
  justify-content: stretch;
  align-items: flex-start;
  color: map.get($colors, text-subtle);

  li:last-child {
    margin-bottom: revert;
  }
}

.header-with-menu {
  width: 100%;
  position: relative;
}

.header-row {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  width: 100%;
  gap: map.get($spacing, md);
}

.mobile-nav-menu {
  max-height: 0;
  overflow: hidden;
  transition: all 0.3s ease-in-out;

  &.open {
    max-height: 500px;
    border-color: map.get($colors, text-subtle);
    opacity: 1;
    visibility: visible;
    margin-top: map.get($spacing, md);
    padding: map.get($spacing, md) map.get($spacing, sm) map.get($spacing, lg) 0;
  }

  ul {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: map.get($spacing, sm);
  }

  @media only screen and (max-width: map.get($breakpoints, md)) {
    position: absolute;
    top: 100%;
    left: 0;
    right: 0;
    background: map.get($colors, bg);
    margin: 0;
    padding: 0 map.get($spacing, sm) 0 0;
    border-top: $border-width solid transparent;
    z-index: 100;
    opacity: 0;
    visibility: hidden;
  }
}

// Hamburger menu styles
#hamburger {
  display: flex;
  flex-direction: column;
  gap: map.get($spacing, xs);
  cursor: pointer;
  padding: map.get($spacing, md) map.get($spacing, sm) 0 0;

  span {
    display: block;
    width: map.get($spacing, lg);
    height: calc($border-width * 1.5);
    background: map.get($colors, text);
    transition: all $transition-speed ease-in-out;
    border-radius: $unit;
  }
}

#mobile-menu {
  summary {
    list-style: none;
    cursor: pointer;

    &::-webkit-details-marker {
      display: none;
    }
  }

  // Animate hamburger to X when open
  &[open] #hamburger {
    span:nth-child(1) {
      transform: rotate(45deg) translate(5px, 5px);
    }
    span:nth-child(2) {
      opacity: 0;
    }
    span:nth-child(3) {
      transform: rotate(-45deg) translate(5px, -5px);
    }
  }
}

.modal {
	display: none;
	position: fixed;
	z-index: 999;
	inset: 0;
	background: rgba(0, 0, 0, 0.5);
	align-items: center;
	justify-content: center;
  padding-inline: map.get($spacing, sm);

	&>div {
		@include flex(column, map.get($spacing, sm));
    justify-content: center;
    align-items: center;
		padding: map.get($spacing, md);
		background: map.get($colors, bg);
		border: $border-width dotted map.get($colors, text);
		border-radius: map.get($spacing, sm);
		text-align: center;
    max-width: calc($container-width / 1.333);

		p {
			margin: 0;
			color: map.get($colors, text-subtle);
		}

		button {
			margin-top: map.get($spacing, md);
      width: fit-content;
		}
	}
}

// Responsive Header Styles
@media only screen and (max-width: map.get($breakpoints, md)) {
  .split-screen header {
    padding-bottom: map.get($spacing, lg);
    position: revert;
  }

  // Hide desktop nav on mobile
  .nav-desktop {
    display: none;
    visibility: hidden;
  }

  // Show mobile nav
  .nav-mobile {
    display: block;
    visibility: visible;
  }
}

// ===================================
// FOOTER
// ===================================

footer {
  width: 100%;
  min-height: fit-content;
  margin: 0;
  padding: 0;
  border-top: $border-width solid map.get($colors, text-subtle);
  max-width: $container-width;

  section {
    @include flex(column, map.get($spacing, xl));
    justify-content: flex-end;
    align-items: flex-start;

    a:hover,
    a:focus-visible {
      color: map.get($colors, bg-more-translucent);
      text-decoration-color: map.get($colors, bg-more-translucent);
    }

    h2,
    p,
    a,
    span {
      margin: map.get($spacing, xs) 0 0;
    }

    .logo {
      fill: map.get($colors, bg);
    }

    .f-innergroup {
      @include flex(column, map.get($spacing, sm));
      gap: map.get($spacing, xs);
      justify-content: flex-start;
      align-items: stretch;

      h2,
      a {
        margin: 0;
        padding: 0;
      }
    }
  }
}
