@use 'sass:map';
@use 'variables' as *;

// ===================================
// COMPONENTS: Content
// ===================================

.pop {
  margin-top: map.get($spacing, md);
  padding: map.get($spacing, md);
  background: map.get($colors, bg-translucent);
  border: $border-width solid map.get($colors, border);
  border-radius: map.get($spacing, xs);

  h2:first-of-type {
    padding-top: map.get($spacing, xs);
  }
}

.projects-showcase {
  @include flex(column, map.get($spacing, 2xl));
  flex-wrap: wrap;

  img {
    background: map.get($colors, bg-translucent);
    border: $border-width solid map.get($colors, border);
    border-radius: map.get($spacing, xs);
  }

  @media only screen and (max-width: map.get($breakpoints, md)) {
    >* {
      flex: 1 1 40%;
    }
  }

  @media only screen and (max-width: map.get($breakpoints, sm)) {
    gap: map.get($spacing, md);

    >* {
      flex: 1 1 100%;
    }
  }
}

.work {
  @include flex(column, map.get($spacing, xs));
  flex-wrap: wrap;

  .role {
    color: map.get($colors, text-subtle);
  }

  figure figcaption {
    font-weight: 600;
    font-size: revert;
  }

  @media only screen and (max-width: map.get($breakpoints, md)) {
    margin-bottom: map.get($spacing, lg);
  }
}

.whatyouget {

  h2,
  div {
    margin-bottom: map.get($spacing, lg);
  }

  div:last-of-type {
    margin-bottom: 0;
  }

  h3 {
    margin-bottom: map.get($spacing, sm);
    color: map.get($colors, text-subtle);
  }
}

.testimonials {
  @include flex(column, map.get($spacing, sm));

  .quote {
    @include flex;
    width: 100%;
    padding: map.get($spacing, lg);
    justify-content: space-between;
    align-items: stretch;
    background: map.get($colors, bg-translucent);
    border: $border-width solid map.get($colors, border);
    border-radius: map.get($spacing, xs);

    >div {
      @include flex(row, map.get($spacing, md));

      .credit {
        @include flex(column, map.get($spacing, xs));
        flex: 1 1 100%;
        justify-content: flex-start;
        align-content: start;
        flex-wrap: nowrap;

        p {
          margin: 0;
        }
      }
    }
  }
}

.faqs {
  h2 {
    color: map.get($colors, text-faint);
  }

  ul li {
    display: revert;

    &:not(:last-child) {
      padding-bottom: map.get($spacing, sm);
    }
  }
}

// ===================================
// COMPONENTS: Slideframe
// ===================================

.slideframe {
  position: fixed;
  z-index: 99999;
  pointer-events: none;

  &--visible {
    pointer-events: auto;

    .slideframe-generalclose {
      visibility: visible;
      opacity: 1;
      pointer-events: auto;
    }

    .slideframe-container {
      right: 0;
    }
  }

  &-generalclose {
    display: block;
    position: fixed;
    inset: 0;
    z-index: 99998;
    background: rgba(0, 0, 0, 0.25);
    visibility: hidden;
    opacity: 0;
    pointer-events: none;
    transition: all 0.1s ease-out;
  }

  &-container {
    position: fixed;
    inset: 0 -100% 0 auto;
    z-index: 99999;
    width: 95%;
    height: 100%;
    border: $border-width solid map.get($colors, border);
    transition: right 0.6s cubic-bezier(0.075, 0.82, 0.165, 1);

    &-titlebar {
      @include flex(row);
      min-height: map.get($spacing, xl);
      padding: map.get($spacing, sm);
      background: map.get($colors, bg);
      border-bottom: $border-width solid map.get($colors, border);
      color: map.get($colors, text);
      font-family: $font-base;
      font-size: $font-base;
      line-height: $line-height-tight;

      strong {
        font-weight: normal;
        font: inherit;
        color: inherit;
      }

      &-title {
        flex-grow: 1;
        padding: 0 map.get($spacing, md);
        text-align: center;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;

        &:before {
          content: '\25CF';
          position: absolute;
          margin-left: calc(map.get($spacing, lg) * -1);
          opacity: 0;
          animation: sl-circle infinite 0.8s;
          transition: opacity 0.4s;
        }
      }
    }

    &-frame {
      width: 100%;
      height: calc(100% - map.get($spacing, xl));
      border: none;
      background: map.get($colors, bg);
    }

    @media only screen and (max-width: map.get($breakpoints, sm)) {
      width: 100%;
    }
  }
}

.slideframe-btn {
  display: block;
  flex-shrink: 0;
  width: map.get($spacing, xl);
  height: 100%;
  padding: 0;
  border: none;
  background: none;
  color: inherit;
  font-family: inherit;
  font-size: map.get($spacing, lg);
  line-height: inherit;
  text-align: center;
  text-decoration: none;
  cursor: pointer;
  appearance: none;

  &:hover {
    display: block;
    flex-shrink: 0;
    width: map.get($spacing, xl);
    height: 100%;
    padding: 0;
    border: none;
    background: none;
    color: inherit;
    font-family: inherit;
    font-size: map.get($spacing, lg);
    line-height: inherit;
    text-align: center;
    text-decoration: none;
    cursor: pointer;
    appearance: none;
  }
}

.slideframe-body {
  &--noscroll {
    overflow: hidden;
  }

  &--loading {
    * {
      cursor: wait;
    }

    .slideframe-container-titlebar-title:before {
      opacity: 1;
      transform-origin: 50% 50%;
    }
  }
}

// Responsive Components
@media only screen and (max-width: map.get($breakpoints, sm)) {
  .ext-link+p {
    max-width: 95%;
  }
}
