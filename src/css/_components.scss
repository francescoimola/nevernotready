@use 'sass:map';
@use 'variables' as *;

// ===================================
// COMPONENTS & UTILITIES
// ===================================
// Buttons + Content Components + Utilities

// ===================================
// BUTTONS
// ===================================

button {
  padding: map.get($spacing, sm) map.get($spacing, md);
  border: none;
  border-radius: map.get($spacing, xs);
  background: map.get($colors, links);
  color: map.get($colors, bg);
  font-size: $font-base;
  font-family: inherit;
  text-align: inherit;
  box-shadow: none;
  cursor: pointer;
  transition: all $transition-speed ease-in-out;

  &:hover,
  &:focus-visible {
    background: map.get($colors, links-subtle);
  }

  &.secondary {
    background: map.get($colors, bg-translucent);
    color: map.get($colors, text-subtle);
    border: $border-width solid map.get($colors, text-faint);

    &:hover,
    &:focus-visible {
      background: map.get($colors, bg-more-translucent);
    }
  }
}

.button-group {
  @include flex(row, map.get($spacing, sm));
  margin-top: map.get($spacing, md);
  flex-wrap: wrap;
  justify-content: start;
  align-items: stretch;
  overflow: hidden;
  transition: opacity 0.3s, height 0.5s cubic-bezier(0.4, 2, 0.6, 1);
}

// ===================================
// CONTENT COMPONENTS
// ===================================

.pop {
  padding: map.get($spacing, md) map.get($spacing, md) calc(map.get($spacing, md) * $perfect-fourth) map.get($spacing, md);
  margin-bottom: map.get($spacing, 2xl);
  background: map.get($colors, bg-translucent);
  border: $border-width solid map.get($colors, text-faint);
  border-radius: map.get($spacing, xs);

  h2:first-of-type {
    padding-top: 0;
    margin-top: 0;
  }

  &.invert {
    background: map.get($colors, links);
    *{color: map.get($colors, bg);
    }
    a:hover {
      text-decoration-color: map.get($colors, links-subtle);
    }
  }

  &.small-margin {
    margin-bottom: map.get($spacing, lg);
  }
}

.projects-showcase {
  flex-wrap: wrap;
  gap: map.get($spacing, xl);

  img {
    background: map.get($colors, bg-translucent);
    border: $border-width solid map.get($colors, text-faint);
    border-radius: map.get($spacing, xs);
  }

  @media only screen and (max-width: map.get($breakpoints, md)) {
    >* {
      flex: 1 1 40%;
    }
  }

  @media only screen and (max-width: map.get($breakpoints, sm)) {
    gap: map.get($spacing, md);

    >* {
      flex: 1 1 100%;
    }
  }
}

.work {
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  gap: map.get($spacing, sm);
  flex-wrap: wrap;

  .role {
    color: map.get($colors, text-subtle);
  }

  .year {
    font-weight: 500;
    color: map.get($colors, text-faint);
  }

  figure figcaption {
    font-weight: 600;
    font-size: revert;
  }

  @media only screen and (max-width: map.get($breakpoints, md)) {
    margin-bottom: map.get($spacing, lg);
  }
}

.image-scroll {
  overscroll-behavior-x: contain;
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  justify-content: flex-start;
  align-items: flex-start;
  gap: map.get($spacing, sm);
  overflow-x: auto;
  overflow-y: hidden;
  width: 100%;
  scrollbar-width: thin;
  scrollbar-color: map.get($colors, text-subtle) transparent;

  &::-webkit-scrollbar {
    height: $unit;
  }

  &::-webkit-scrollbar-track {
    background: transparent;
  }

  &::-webkit-scrollbar-thumb {
    background: map.get($colors, text-subtle);
  }

  picture {
    flex: 0 0 auto;
    display: inline-block;
  }

  img {
    aspect-ratio: auto;
    object-fit: contain;
    user-select: none;
    -webkit-user-drag: none;
    display: inline-block;
    flex: 0 0 auto;
    width: auto;
    height: calc(map.get($spacing, 2xl) * 4);
    border: $border-width solid map.get($colors, text-faint);
    border-radius: map.get($spacing, xs);
    opacity: 1;
  }

  @media only screen and (max-width: map.get($breakpoints, md)) {
    img {
      height: calc(map.get($spacing, 2xl) * 2.5);
    }
  }

  @media only screen and (max-width: map.get($breakpoints, sm)) {
    img {
      height: calc(map.get($spacing, 2xl) * 2);
    }
  }
}

.playground {
  gap: 0;
  margin-bottom: map.get($spacing, xl);

  h3 {
    margin-bottom: 0;
  }

  >div:first-of-type {
    width: 100%;
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    align-items: baseline;
    gap: map.get($spacing, xs);
    margin-bottom: map.get($spacing, sm);

    h3 {
      margin-right: auto;
      padding-right: map.get($spacing, lg);
    }
  }
}

.whatyouget {

  h2,
  div {
    margin-bottom: map.get($spacing, lg);
  }

  div:last-of-type {
    margin-bottom: 0;
  }

  h3 {
    margin-bottom: map.get($spacing, sm);
    color: map.get($colors, text-subtle);
  }
}

.testimonials {
  @include flex(column, map.get($spacing, sm));

  .quote {
    @include flex;
    width: 100%;
    padding: map.get($spacing, lg);
    justify-content: space-between;
    align-items: stretch;
    background: map.get($colors, bg-translucent);
    border: $border-width solid map.get($colors, text-faint);
    border-radius: map.get($spacing, xs);

    @media only screen and (max-width: map.get($breakpoints, sm)) {
      padding: map.get($spacing, md);
    }

    >div {
      @include flex(row, map.get($spacing, md));

      .credit {
        @include flex(column, map.get($spacing, xs));
        flex: 1 1 100%;
        justify-content: flex-start;
        align-content: start;
        flex-wrap: nowrap;

        p {
          margin: 0;
        }
      }
    }
  }
}

.faqs {
  h2 {
    color: map.get($colors, text-faint);
  }

  ul li {
    display: revert;

    &:not(:last-child) {
      padding-bottom: map.get($spacing, sm);
    }
  }
}

// Responsive Components
@media only screen and (max-width: map.get($breakpoints, sm)) {
  .ext-link+p {
    max-width: 95%;
  }
}

// ===================================
// UTILITIES
// ===================================

.hidden {
  display: none;
}

.light {
  margin: 0 0 map.get($spacing, sm);
  font-weight: 600;
  font-size: $font-large;
  letter-spacing: $letter-spacing-large;
  line-height: $line-height-base;
  text-rendering: optimizeLegibility;
  color: map.get($colors, text-faint);

  &:first-of-type {
    padding-top: map.get($spacing, xs);
  }
}

ul.plain-list {
  display: flex;
  flex-direction: column;
  width: 100%;
  justify-content: flex-start;
  align-content: start;
  flex-wrap: nowrap;
  gap: map.get($spacing, xs);
  margin-left: 0;
  color: map.get($colors, text-subtle);
  list-style: none;
}

ul.services-list {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-content: start;
  flex-wrap: nowrap;
  gap: map.get($spacing, sm);
  margin-left: 0;
  list-style: none;
}

.side-by-grid {
  display: grid;
  grid-template-columns: 1fr;
  gap: map.get($spacing, lg);

  .grid-item {
    display: grid;
    grid-template-columns: 1fr 2fr;
    gap: map.get($spacing, lg);
    align-items: start;
  }

  @media only screen and (max-width: map.get($breakpoints, md)) {
    .grid-item {
      grid-template-columns: 1fr;
      gap: map.get($spacing, xs);
    }

    figure.grid-item {
      max-width: 50%;
      height: auto;
    }
  }
}

// Pricing grid
.pricing-grid {
  display: grid;
  gap: map.get($spacing, xs);
}

.pricing-row {
  display: grid;
  grid-template-columns: 2fr 1fr;
  gap: map.get($spacing, md);
  padding: map.get($spacing, sm);
  border-bottom: $border-width dashed map.get($colors, text-faint);
  align-items: center;

  &.pricing-header {
    font-weight: bold;
    border-bottom: $border-width solid map.get($colors, text-faint);
  }

  span:last-child {
    text-align: right;
  }

  @media only screen and (max-width: map.get($breakpoints, sm)) {
    grid-template-columns: 1fr;
    gap: map.get($spacing, xs);

    span:last-child {
      text-align: left;
    }
  }
}
