@use 'sass:map';
@use 'variables' as *;

// ===================================
// COMPONENTS: Content
// ===================================

.pop {
  margin-top: map.get($spacing, md);
  padding: map.get($spacing, md);
  background: map.get($colors, bg-translucent);
  border: $border-width solid map.get($colors, border);
  border-radius: map.get($spacing, xs);

  h2:first-of-type {
    padding-top: map.get($spacing, xs);
  }
}

.projects-showcase {
    flex-wrap: wrap;
  img {
      background: map.get($colors, bg-translucent);
      border: $border-width solid map.get($colors, border);
      border-radius: map.get($spacing, xs);
  }

  @media only screen and (max-width: map.get($breakpoints, md)) {
    >* {
        flex: 1 1 40%;
    }
  }

  @media only screen and (max-width: map.get($breakpoints, sm)) {
      gap: map.get($spacing, md);
    >* {
        flex: 1 1 100%;
    }
  }
}

.work {
    flex-wrap: wrap;
  .role {
      color: map.get($colors, text-subtle);
  }

  .year {
      font-weight: 500;
      color: map.get($colors, text-faint);
  }

  figure figcaption {
      font-size: revert;
      font-weight: 600;
  }

  @media only screen and (max-width: map.get($breakpoints, md)) {
      margin-bottom: map.get($spacing, lg);
  }
}

.image-scroll {
    overscroll-behavior-x: contain;
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    justify-content: flex-start;
    align-items: flex-start;
    gap: map.get($spacing, sm);
    overflow-x: auto;
    overflow-y: hidden;
    width: 100%;
    margin-top: map.get($spacing, md);
  img {
      aspect-ratio: auto;
      object-fit: contain;
      user-select: none;
      -webkit-user-drag: none;
      display: inline-block;
      flex: 0 0 auto;
      width: auto;
      height: calc(map.get($spacing, 2xl) * 4);
      transition: opacity $transition-speed ease-in-out;
      border: $border-width solid map.get($colors, border);
      border-radius: map.get($spacing, xs);
    &:hover {
        opacity: 0.85;
    }
  }

  @media only screen and (max-width: map.get($breakpoints, md)) {
    img {
        height: calc(map.get($spacing, 2xl) * 2.5);
    }
  }

  @media only screen and (max-width: map.get($breakpoints, sm)) {
    img {
        height: calc(map.get($spacing, 2xl) * 2);
    }
  }
}

.playground {
    gap: 0;
    margin-bottom: map.get($spacing, xl);
  h3 {
      margin-bottom: 0;
  }

  >div:first-of-type {
      display: flex;
      flex-wrap: wrap;
      align-items: baseline;
      gap: map.get($spacing, xs);
      margin-bottom: map.get($spacing, sm);
    h3 {
        margin-right: auto;
        padding-right: map.get($spacing, lg);
    }
  }
}

.whatyouget {
  div {
      margin-bottom: map.get($spacing, lg);
  }

  div:last-of-type {
      margin-bottom: 0;
  }

  h3 {
      margin-bottom: map.get($spacing, sm);
      color: map.get($colors, text-subtle);
  }
}

.testimonials {
  .quote {
      justify-content: space-between;
      align-items: stretch;
      width: 100%;
      padding: map.get($spacing, lg);
      background: map.get($colors, bg-translucent);
      border: $border-width solid map.get($colors, border);
      border-radius: map.get($spacing, xs);
    @media only screen and (max-width: map.get($breakpoints, sm)) {
        padding: map.get($spacing, md);
    }

    >div {
      .credit {
          flex-wrap: nowrap;
          justify-content: flex-start;
          align-content: start;
          flex: 1 1 100%;
        p {
            margin: 0;
        }
      }
    }
  }
}

.faqs {
  h2 {
      color: map.get($colors, text-faint);
  }

  ul li {
      display: revert;
    &:not(:last-child) {
        padding-bottom: map.get($spacing, sm);
    }
  }
}

// ===================================
// COMPONENTS: Slideframe
// ===================================

.slideframe {
    pointer-events: none;
    position: fixed;
    z-index: 99999;
  &--visible {
      pointer-events: auto;
    .slideframe-generalclose {
        pointer-events: auto;
        visibility: visible;
        opacity: 1;
    }

    .slideframe-container {
        right: 0;
    }
  }

  &-generalclose {
      inset: 0;
      pointer-events: none;
      display: block;
      position: fixed;
      z-index: 99998;
      visibility: hidden;
      opacity: 0;
      transition: all 0.1s ease-out;
      background: rgba(0, 0, 0, 0.25);
  }

  &-container {
      inset: 0 -100% 0 auto;
      position: fixed;
      z-index: 99999;
      width: 95%;
      height: 100%;
      transition: right 0.6s cubic-bezier(0.075, 0.82, 0.165, 1);
      border: $border-width solid map.get($colors, border);
    &-titlebar {
        min-height: map.get($spacing, xl);
        padding: map.get($spacing, sm);
        background: map.get($colors, bg);
        border-bottom: $border-width solid map.get($colors, border);
        font-size: $font-base;
        font-family: $font-base;
        line-height: $line-height-tight;
        color: map.get($colors, text);
      strong {
          font-weight: normal;
          font: inherit;
          color: inherit;
      }

      &-title {
          flex-grow: 1;
          overflow: hidden;
          padding: 0 map.get($spacing, md);
          text-align: center;
          text-overflow: ellipsis;
          white-space: nowrap;
        &:before {
            content: '\25CF';
            position: absolute;
            opacity: 0;
            margin-left: calc(map.get($spacing, lg) * -1);
            transition: opacity 0.4s;
            animation: sl-circle infinite 0.8s;
        }
      }
    }

    &-frame {
        width: 100%;
        height: calc(100% - map.get($spacing, xl));
        background: map.get($colors, bg);
        border: none;
    }

    @media only screen and (max-width: map.get($breakpoints, sm)) {
        width: 100%;
    }
  }
}

.slideframe-btn {
    appearance: none;
    display: block;
    flex-shrink: 0;
    width: map.get($spacing, xl);
    height: 100%;
    padding: 0;
    background: none;
    cursor: pointer;
    border: none;
    font-size: map.get($spacing, lg);
    font-family: inherit;
    line-height: inherit;
    color: inherit;
    text-align: center;
    text-decoration: none;
  &:hover {
      appearance: none;
      display: block;
      flex-shrink: 0;
      width: map.get($spacing, xl);
      height: 100%;
      padding: 0;
      background: none;
      cursor: pointer;
      border: none;
      font-size: map.get($spacing, lg);
      font-family: inherit;
      line-height: inherit;
      color: inherit;
      text-align: center;
      text-decoration: none;
  }
}

.slideframe-body {
  &--noscroll {
      overflow: hidden;
  }

  &--loading {
    * {
        cursor: wait;
    }

    .slideframe-container-titlebar-title:before {
        transform-origin: 50% 50%;
        opacity: 1;
    }
  }
}

// Responsive Components
@media only screen and (max-width: map.get($breakpoints, sm)) {
  .ext-link+p {
      max-width: 95%;
  }
}

/* Lazy image helper styles */
.image-placeholder {
    display: inline-block;
    opacity: 0.6;
    min-width: 160px;
    min-height: 80px;
    background: map.get($colors, bg-translucent);
}

.lazy-image {
    opacity: 1;
    transition: opacity 0.25s ease-in-out;
}

.lazy-error {
    background: #f8d7da;
    border-color: #f5c2c7;
}

/* When an image has finished loading, remove the placeholder visuals
   and gently fade the image in. */
.lazy-loaded {
  opacity: 1 !important;
  background: transparent !important;
  transition: opacity 0.25s ease-in-out, background 0.15s linear;
}